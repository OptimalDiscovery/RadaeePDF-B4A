<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSReaderView</name>
        <shortname>PDFReaderView</shortname>
        <objectwrapper>com.radaee.reader.ReaderController</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate4</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>com.radaee.view.PDFView</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PDFView</name>
            <returntype>com.radaee.view.PDFView</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFVPage</name>
        <shortname>PDFVPage</shortname>
        <objectwrapper>com.radaee.view.PDFVPage</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ToPDFX</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scrollx</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetScale</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>IsFinished</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ToPDFY</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scrolly</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ToDIBY</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ToDIBX</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetPageNo</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>CreateMatrix</name>
            <comment></comment>
            <returntype>com.radaee.pdf.Matrix</returntype>
        </method>
        <method>
            <name>GetWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>CreateInvertMatrix</name>
            <comment></comment>
            <returntype>com.radaee.pdf.Matrix</returntype>
            <parameter>
                <name>scrollx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scrolly</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetVY</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>scrolly</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetVX</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>scrollx</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ToPDFSize</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>val</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetPage</name>
            <comment></comment>
            <returntype>com.radaee.pdf.Page</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewVert</name>
        <shortname>PDFViewVert</shortname>
        <objectwrapper>com.radaee.view.PDFViewVert</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment>get Position from point in view coordinate, implement in derived class.
 pass (0,0) to get position of left-top corner
vx: 
vy: 
Return type: @return:</comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewVert.RSPDFPos</name>
        <shortname>PDFPos</shortname>
        <objectwrapper>com.radaee.view.PDFView.PDFPos</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PageNo</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewThumb</name>
        <shortname>PDFViewThumb</shortname>
        <objectwrapper>com.radaee.view.PDFViewThumb</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setThumbListener</name>
            <comment>Raises _PageClicked (pageNo as int)</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment>get Position from point in view coordinate, implement in derived class.
 pass (0,0) to get position of left-top corner
vx: 
vy: 
Return type: @return:</comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Orientation</name>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewThumb.RSPDFPos</name>
        <shortname>PDFPos</shortname>
        <objectwrapper>com.radaee.view.PDFView.PDFPos</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PageNo</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewHorz</name>
        <shortname>PDFViewHorz</shortname>
        <objectwrapper>com.radaee.view.PDFViewHorz</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment>get Position from point in view coordinate, implement in derived class.
 pass (0,0) to get position of left-top corner
vx: 
vy: 
Return type: @return:</comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Direction</name>
            <parameter>
                <name>rtol</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewHorz.RSPDFPos</name>
        <shortname>PDFPos</shortname>
        <objectwrapper>com.radaee.view.PDFView.PDFPos</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PageNo</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewDual</name>
        <shortname>PDFViewDual</shortname>
        <objectwrapper>com.radaee.view.PDFViewDual</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>vSetLayoutPara</name>
            <comment>verts - applied duals flag for vertical screen horzs - applied duals flag
 for landscape screen Element which set to true mean this cell treat as
 dual page, otherwise treat as single page. For example, book has a
 cover(first page treat as single) just codes: verts = null; horzs = new
 boolean[1]; horzs[1] = false; Pages, those out of array bound: in
 vertical screen: treat as single page(false). in landscape screen: treat
 as dual page(true).
verts: 
horzs: 
rtol: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>verts</name>
                <type>boolean[]</type>
            </parameter>
            <parameter>
                <name>horzs</name>
                <type>boolean[]</type>
            </parameter>
            <parameter>
                <name>rtol</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFViewCurl</name>
        <shortname>PDFViewCurl</shortname>
        <objectwrapper>com.radaee.view.PDFViewCurl</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFView</name>
        <shortname>PDFView</shortname>
        <objectwrapper>com.radaee.view.PDFView</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>doc</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
            <parameter>
                <name>page_gap</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>back_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearSel</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper</type>
            </parameter>
        </method>
        <method>
            <name>setSelectedMarkup</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFView class.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>FindEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FindStart</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Find</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScale</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>fy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>CenterPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>page</name>
                <type>com.radaee.view.PDFVPage</type>
            </parameter>
        </method>
        <method>
            <name>getPos</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFView.PDFPos</returntype>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GotoPage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPage</name>
            <comment></comment>
            <returntype>com.radaee.view.PDFVPage</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPos</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>com.radaee.view.PDFView.PDFPos</type>
            </parameter>
            <parameter>
                <name>vx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Resize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>motionEvent</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>MinScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectedStatus</name>
            <parameter>
                <name>set</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Lock</name>
            <returntype>int</returntype>
            <parameter>
                <name>lock</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinW</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PageGap</name>
            <parameter>
                <name>gap</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WinH</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MaxScale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Scale</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFView.RSPDFPos</name>
        <shortname>PDFPos</shortname>
        <objectwrapper>com.radaee.view.PDFView.PDFPos</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>PageNo</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>X</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFPath</name>
        <shortname>PDFPath</shortname>
        <objectwrapper>com.radaee.pdf.Path</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFDocument.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LineTo</name>
            <comment>line to operation
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveTo</name>
            <comment>move to operation
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClosePath</name>
            <comment>close a contour.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetNode</name>
            <comment>get each node
index: range [0, GetNodeCount() - 1]
pt: output value: 2 elements coordinate point
Return type: @return:node type:&lt;br/&gt;
         0: move to&lt;br/&gt;
         1: line to&lt;br/&gt;
         3: curve to, index, index + 1, index + 2 are all data&lt;br/&gt;
         4: close operation&lt;br/&gt;</comment>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>CurveTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetNodeCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Destroy</name>
            <comment>free memory</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFPageContent</name>
        <shortname>PDFPageContent</shortname>
        <objectwrapper>com.radaee.pdf.PageContent</objectwrapper>
        <owner>process</owner>
        <method>
            <name>TextSetFont</name>
            <comment>set text font
font: ResFont object created by Page.AddResFont()
size: text size in PDF coordinate.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Page.ResFont</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>StrokePath</name>
            <comment>stroke path.
path: Path object</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>SetStrokeColor</name>
            <comment>PDF operator: set stroke color.
color: formatted as 0xRRGGBB, no alpha channel. alpha value shall set
            by ExtGraphicState(ResGState).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextGetSize</name>
            <comment>reserved.
font: 
text: test to display, may container '\r' or '\n'
width: font width
height: font height
char_space: 
word_space: 
Return type: @return:</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Page.ResFont</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>char_space</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>word_space</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextNextLine</name>
            <comment>PDF operator: new a text line</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FillPath</name>
            <comment>fill path.
path: Path object
winding: winding fill rule?</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>TextSetCharSpace</name>
            <comment>PDF operator: set char space(extra space between chars).
space: char space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>space</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetLeading</name>
            <comment>PDF operator: set text leading, height between 2 text lines.
leading: leading in PDF coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>leading</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetRise</name>
            <comment>PDF operator: set text rise
rise: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>rise</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetFillColor</name>
            <comment>PDF operator: set fill and other operations color.
color: formatted as 0xRRGGBB, no alpha channel. alpha value shall set
            by ExtGraphicState(ResGState).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Create</name>
            <comment>create it.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawText</name>
            <comment>show text
text: text to show, '\r' or '\n' in string start a new line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GSSet</name>
            <comment>PDF operator: set ExtGraphicState
gs: ResGState object created by Page.AddResGState()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>gs</name>
                <type>com.radaee.pdf.Page.ResGState</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF Page Content.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeWidth</name>
            <comment>PDF operator: set line width
w: line width in PDF coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipPath</name>
            <comment>set the path as clip path.
path: Path object
winding: winding fill rule?</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>DrawImage</name>
            <comment>PDF operator: show image.
image: image object created by Page.AddResImage()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>image</name>
                <type>com.radaee.pdf.Page.ResImage</type>
            </parameter>
        </method>
        <method>
            <name>TextBegin</name>
            <comment>PDF operator: begin text and set text position to (0,0).</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TextEnd</name>
            <comment>PDF operator: text end.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeCap</name>
            <comment>PDF operator: set line cap
cap: 0:butt, 1:round: 2:square</comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetStrokeJoin</name>
            <comment>PDF operator: set line join
join: 0:miter, 1:round, 2:bevel</comment>
            <returntype>void</returntype>
            <parameter>
                <name>join</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GSSave</name>
            <comment>PDF operator: gs_save, save current GraphicState</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeMiter</name>
            <comment>PDF operator: set miter limit.
miter: miter limit.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>miter</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GSSetMatrix</name>
            <comment>PDF operator: set matrix.
mat: Matrix object</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>GSRestore</name>
            <comment>PDF operator: gs_restore, restore GraphicState</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TextSetHScale</name>
            <comment>PDF operator: set horizon scale for chars.
scale: 100 means scale value 1.0f</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextSetRenderMode</name>
            <comment>PDF operator: set text render mode.
mode: &lt;br/&gt;
            0: filling&lt;br/&gt;
            1: stroke&lt;br/&gt;
            2: fill and stroke&lt;br/&gt;
            3: do nothing&lt;br/&gt;
            4: fill and set clip path&lt;br/&gt;
            5: stroke and set clip path&lt;br/&gt;
            6: fill/stroke/clip&lt;br/&gt;
            7: set clip path.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextMove</name>
            <comment>PDF operator: move text position relative to previous line
x: in PDF coordinate add to previous line position
y: in PDF coordinate add to previous line position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetWordSpace</name>
            <comment>PDF operator: set word space(extra space between words spit by blank char
 ' ' ).
space: word space.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>space</name>
                <type>float</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFPage</name>
        <shortname>PDFPage</shortname>
        <objectwrapper>com.radaee.pdf.Page</objectwrapper>
        <owner>process</owner>
        <method>
            <name>RenderIsFinished</name>
            <comment>check if page rendering is finished.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ObjsStart</name>
            <comment>get text objects to memory.&lt;br/&gt;
 a standard license is needed for this method</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddAnnotEllipse</name>
            <comment>add ellipse to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rect: 4 elements for left, top, right, bottom in DIB coordinate system
width: line width
color: ellipse color, formated as 0xAARRGGBB
fill_color: fill color in ellipse, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAnnotFromPoint</name>
            <comment>get annotations by PDF point.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
x: x value in PDF coordinate system.
y: y value in PDF coordinate system.
Return type: @return:handle of annotation, valid until Close invoked.</comment>
            <returntype>com.radaee.pdf.Page.Annotation</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ReflowToBmp</name>
            <comment>Reflow to Bitmap object.&lt;br/&gt;
 this method valid in professional or premium version
bitmap: bitmap to reflow
orgx: origin x coordinate
orgy: origin y coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotText</name>
            <comment>add a sticky text annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
pt: 2 elements: x, y in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetParaCount</name>
            <comment>get reflow paragraph count.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:count</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>RenderCancel</name>
            <comment>set page status to cancelled and cancel render function.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderToBmp</name>
            <comment>render page to Bitmap object directly. this function returned for cancelled or finished.&lt;br/&gt;before render, you need erase Bitmap object.
bitmap: Bitmap object to render.
mat: Matrix object define scale, rotate, translate operations.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotStamp</name>
            <comment>add an Rubber Stamp to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: icon area rect [left, top, right, bottom] in PDF coordinate.
icon: predefined value as below:&lt;br/&gt;
  0: "Draft"(default icon)&lt;br/&gt;
  1: "Approved"&lt;br/&gt;
  2: "Experimental"&lt;br/&gt;
  3: "NotApproved"&lt;br/&gt;
  4: "AsIs"&lt;br/&gt;
  5: "Expired"&lt;br/&gt;
  6: "NotForPublicRelease"&lt;br/&gt;
  7: "Confidential"&lt;br/&gt;
  8: "Final"&lt;br/&gt;
  9: "Sold"&lt;br/&gt;
 10: "Departmental"&lt;br/&gt;
 11: "ForComment"&lt;br/&gt;
 12: "TopSecret"&lt;br/&gt;
 13: "ForPublicRelease"&lt;br/&gt;
 14: "Accepted"&lt;br/&gt;
 15: "Rejected"&lt;br/&gt;
 16: "Witness"&lt;br/&gt;
 17: "InitialHere"&lt;br/&gt;
 18: "SignHere"&lt;br/&gt;
 19: "Void"&lt;br/&gt;
 20: "Completed"&lt;br/&gt;
 21: "PreliminaryResults"&lt;br/&gt;
 22: "InformationOnly"&lt;br/&gt;
 23: "End"&lt;br/&gt;
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharFontName</name>
            <comment>get char's font name. this can be invoked after ObjsStart
index: 0 based unicode index.
Return type: @return:font name, may be null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotPolyline</name>
            <comment>add polyline to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: must be a set of unclosed lines. do not container any move-to operation except the first point in the path.
style1: style for start point:&lt;br/&gt;
 0: None&lt;br/&gt;
 1: Arrow&lt;br/&gt;
 2: Closed Arrow&lt;br/&gt;
 3: Square&lt;br/&gt;
 4: Circle&lt;br/&gt;
 5: Butt&lt;br/&gt;
 6: Diamond&lt;br/&gt;
 7: Reverted Arrow&lt;br/&gt;
 8: Reverted Closed Arrow&lt;br/&gt;
 9: Slash
style2: style for end point, values are same as style1.
color: stroke color formated as 0xAARRGGBB.
fill_color: fill color, formated as 0xAARRGGBB. if AA == 0, no fill operations, otherwise alpha value is same to stroke color.
width: stroke width in PDF coordinate
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>style1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharRect</name>
            <comment>get char's box in PDF coordinate system, this can be invoked after ObjsStart
index: 0 based unicode index.
vals: return 4 elements for PDF rectangle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vals</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharUnicode</name>
            <comment>get char's unicode value.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:unicode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetString</name>
            <comment>get string from range. this can be invoked after ObjsStart
from: 0 based unicode index.
to: 0 based unicode index.
Return type: @return:string or null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>from</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>to</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddResFont</name>
            <comment>add a font as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
font: font object created by Document.NewFontCID()
Return type: @return:ResFont or null.</comment>
            <returntype>com.radaee.pdf.Page.ResFont</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Document.DocFont</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharWidth</name>
            <comment>get char's font width.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:font width for this char</comment>
            <returntype>float</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotGoto</name>
            <comment>add goto-page link to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: link area rect [left, top, right, bottom] in PDF coordinate.
pageno: 0 based pageno to goto.
top: y coordinate in PDF coordinate, page.height is top of page. and 0 is bottom of page.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotRect</name>
            <comment>add rectangle to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rect: 4 elements for left, top, right, bottom in DIB coordinate system
width: line width
color: rectangle color, formated as 0xAARRGGBB
fill_color: fill color in rectangle, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF Page.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ReflowGetCharFont</name>
            <comment>get char's font name.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:name string</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharColor</name>
            <comment>get char's fill color for display.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:color value formatted 0xAARRGGBB, AA: alpha value, RR:red, GG:green, BB:blue</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotInk2</name>
            <comment>add hand-writing to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
ink: Ink object in PDF coordinate.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ink</name>
                <type>com.radaee.pdf.Ink</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment>render page to dib object. this function returned for cancelled or finished.&lt;br/&gt;before render, you need invoke RenderPrePare.
dib: DIB object to render. obtained by Global.dibGet().
mat: Matrix object define scale, rotate, translate operations.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharIndex</name>
            <comment>get char index nearest to point
pt: point as [x,y] in PDF coordinate.
Return type: @return:char index or -1 failed.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>AddResImage</name>
            <comment>add an image as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
image: image object created by Document.NewImage() or Document.NewImageJPEG()
Return type: @return:null means failed.</comment>
            <returntype>com.radaee.pdf.Page.ResImage</returntype>
            <parameter>
                <name>image</name>
                <type>com.radaee.pdf.Document.DocImage</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharRect</name>
            <comment>get char's bound box.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
rect: output: 4 element as [left, top, right, bottom].</comment>
            <returntype>void</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharCount</name>
            <comment>get chars count in this page. this can be invoked after ObjsStart&lt;br/&gt;
 a standard license is needed for this method
Return type: @return:count or 0 if ObjsStart not invoked.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ReflowGetText</name>
            <comment>get text from range.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph1: first position
ichar1: first position
iparagraph2: second position
ichar2: second position
Return type: @return:string value or null</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>iparagraph1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>iparagraph2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotURI</name>
            <comment>add URL link to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: link area rect [left, top, right, bottom] in PDF coordinate.
uri: url address, example: "http://www.radaee.com/en"
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotAttachment</name>
            <comment>add a file as an attachment to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: absolute path name to the file.
icon: icon display to the page. values as:&lt;br/&gt;
 0: PushPin&lt;br/&gt;
 1: Graph&lt;br/&gt;
 2: Paperclip&lt;br/&gt;
 3: Tag&lt;br/&gt;
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotMarkup2</name>
            <comment>add a text-markup annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be only invoked after ObjsStart.&lt;br/&gt;
 this method valid in professional or premium version
cindex1: first char index
cindex2: second char index
type: type as following:&lt;br/&gt;
 0: Highlight&lt;br/&gt;
 1: Underline&lt;br/&gt;
 2: StrikeOut&lt;br/&gt;
 3: Highlight without round corner&lt;br/&gt;
 4: Squiggly underline.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>cindex1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>cindex2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Reflow</name>
            <comment>Reflow to dib.&lt;br/&gt;
 this method valid in professional or premium version
dib: dib to render
orgx: origin x coordinate
orgy: origin y coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render_Normal</name>
            <comment>render to page in normal quality
dib: same as Render function
mat: same as Render function</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotLine</name>
            <comment>add line to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
pt1: start point, 2 elements for x,y
pt2: end point, 2 elements for x,y
style1: style for start point:&lt;br/&gt;
 0: None&lt;br/&gt;
 1: Arrow&lt;br/&gt;
 2: Closed Arrow&lt;br/&gt;
 3: Square&lt;br/&gt;
 4: Circle&lt;br/&gt;
 5: Butt&lt;br/&gt;
 6: Diamond&lt;br/&gt;
 7: Reverted Arrow&lt;br/&gt;
 8: Reverted Closed Arrow&lt;br/&gt;
 9: Slash
style2: style for end point, values are same as style1.
width: line width in DIB coordinate
color: line color. same as addAnnotRect.
fill_color: fill color. same as addAnnotRect.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>pt1</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>pt2</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>style1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotMarkup</name>
            <comment>add a text-markup annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rects: 4 * n rectangles, each 4 elements: left, top, right, bottom in DIB coordinate system. n is decided by length of array.
type: 0: Highlight, 1: Underline, 2: StrikeOut, 3: Highlight without round corner.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rects</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotEditbox2</name>
            <comment>add an edit-box on page. the edit-box has no border and background.
 the font of edit box is set by Global.setTextFont in Global.Init().
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in premium version.
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
tsize: text size in DIB coordinate system.
color: text color, formated as 0xAARRGGBB.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>tsize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAnnot</name>
            <comment>get annotations by index.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
index: 0 based index value. range:[0, GetAnnotCount()-1]
Return type: @return:handle of annotation, valid until Close invoked.</comment>
            <returntype>com.radaee.pdf.Page.Annotation</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharCount</name>
            <comment>get one paragraph's char count.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
Return type: @return:char count</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>Close page object and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddAnnotLine2</name>
            <comment>add line to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
pt1: start point in PDF coordinate, 2 elements for x,y
pt2: end point in PDF coordinate, 2 elements for x,y
style1: style for start point:&lt;br/&gt;
 0: None&lt;br/&gt;
 1: Arrow&lt;br/&gt;
 2: Closed Arrow&lt;br/&gt;
 3: Square&lt;br/&gt;
 4: Circle&lt;br/&gt;
 5: Butt&lt;br/&gt;
 6: Diamond&lt;br/&gt;
 7: Reverted Arrow&lt;br/&gt;
 8: Reverted Closed Arrow&lt;br/&gt;
 9: Slash
style2: style for end point, values are same as style1.
width: line width in DIB coordinate
color: line color. same as addAnnotRect.
fill_color: fill color, used to fill arrows of the line.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pt1</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>pt2</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>style1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>icolor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RenderPrePare</name>
            <comment>prepare to render. it reset dib pixels to white value, and reset page status.
dib: DIB object to render. obtained by Global.dibGet().</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddResGState</name>
            <comment>add GraphicState as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
gstate: ExtGraphicState created by Document.NewGState();
Return type: @return:null means failed.</comment>
            <returntype>com.radaee.pdf.Page.ResGState</returntype>
            <parameter>
                <name>gstate</name>
                <type>com.radaee.pdf.Document.DocGState</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotEllipse2</name>
            <comment>add ellipse to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: 4 elements for left, top, right, bottom in PDF coordinate system
width: line width in PDF coordinate
color: ellipse color, formated as 0xAARRGGBB
fill_color: fill color in ellipse, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddContent</name>
            <comment>add content stream to this page.&lt;br/&gt;
 a premium license is needed for this method.
content: PageContent object called PageContent.create().
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>content</name>
                <type>com.radaee.pdf.PageContent</type>
            </parameter>
        </method>
        <method>
            <name>FindOpen</name>
            <comment>create a find session. this can be invoked after ObjsStart
str: key string to find.
match_case: match case?
whole_word: match whole word?
Return type: @return:handle of find session, or 0 if no found.</comment>
            <returntype>com.radaee.pdf.Page.Finder</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotGlyph</name>
            <comment>add a user-defined glyph to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
path: Path object.
color: text color, formated as 0xAARRGGBB.
winding: if true, using winding fill rule, otherwise using odd-even fill rule.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotHWriting</name>
            <comment>add hand-writing to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
hwriting: hand writing object
orgx: origin x coordinate in page. in DIB coordinate system
orgy: origin y coordinate in page. in DIB coordinate system
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>hwriting</name>
                <type>com.radaee.pdf.HWriting</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotBitmap</name>
            <comment>add a bitmap object as an annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
bitmap: Bitmap object to add, which should be formated in ARGB_8888
has_alpha: is need to save alpha channel information?
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>has_alpha</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharHeight</name>
            <comment>get char's font height.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:font height for this char</comment>
            <returntype>float</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotInk</name>
            <comment>add hand-writing to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
ink: Ink object
orgx: origin x coordinate in page. in DIB coordinate system
orgy: origin y coordinate in page. in DIB coordinate system
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>ink</name>
                <type>com.radaee.pdf.Ink</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ReflowStart</name>
            <comment>Start Reflow.&lt;br/&gt;
 this method valid in professional or premium version
width: input width, function calculate height.
scale: scale base to 72 DPI, 2.0 means 144 DPI. the reflowed text will displayed in scale
enable_images: enable reflow images.
Return type: @return:the height that reflow needed.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>enable_images</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotEditbox</name>
            <comment>add an edit-box on page. the edit-box has no border and background.
 the font of edit box is set by Global.setTextFont in Global.Init().
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in premium version.
matrix: Matrix object that passed to Render or RenderToBmp function.
rect: 4 elements: left, top, right, bottom in DIB coordinate system.
tsize: text size in DIB coordinate system.
color: text color, formated as 0xAARRGGBB.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>tsize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsAlignWord</name>
            <comment>get index aligned by word. this can be invoked after ObjsStart
from: 0 based unicode index.
dir: if dir &lt; 0,  get start index of the word. otherwise get last index of the word.
Return type: @return:new index value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>from</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotRect2</name>
            <comment>add rectangle to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: 4 elements for left, top, right, bottom in PDF coordinate system
width: line width in PDF coordinate.
color: rectangle color, formated as 0xAARRGGBB
fill_color: fill color in rectangle, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CopyAnnot</name>
            <comment>clone an annotation object to this page.&lt;br/&gt;
 this method need a professional or premium license.
annot: Annotation object must be in this document..
rect: [left, top, right, bottom] in PDF coordinate.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>annot</name>
                <type>com.radaee.pdf.Page.Annotation</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>RenderThumb</name>
            <comment>render thumb image to Bitmap object.&lt;br/&gt;
 the image always scale and displayed in center of Bitmap.&lt;br/&gt;
bmp: Bitmap to render
Return type: @return:true if the page has thumb image, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bmp</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotPolygon</name>
            <comment>add polygon to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: must be a closed contour.
color: stroke color formated as 0xAARRGGBB.
fill_color: fill color, formated as 0xAARRGGBB. if AA == 0, no fill operations, otherwise alpha value is same to stroke color.
width: stroke width in PDF coordinate
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>AnnotCount</name>
            <returntype>int</returntype>
            <comment>get annotations count in this page.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version</comment>
        </property>
        <property>
            <name>Rotate</name>
            <returntype>int</returntype>
            <comment>get rotate degree for page, example: 0 or 90</comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFPage.RSPPDFDocGState</name>
        <shortname>PDFPageFinder</shortname>
        <objectwrapper>com.radaee.pdf.Page.Finder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the DocGState</comment>
            <returntype>void</returntype>
            <parameter>
                <name>finder</name>
                <type>com.radaee.pdf.Page.Finder</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>free memory of find session.
hand_finder: handle of find session, obtained by FindOpen.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetFirstChar</name>
            <comment>get find count in this page.
hand_finder: handle of find session, obtained by FindOpen.
index: 0 based index value. range:[0, FindGetCount()-1]
Return type: @return:the first char index of texts, see: ObjsGetString. range:[0, ObjsGetCharCount()-1]</comment>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCount</name>
            <comment>get find count in this page.
hand_finder: handle of find session, obtained by FindOpen.
Return type: @return:count or 0 if no found.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFMatrix</name>
        <shortname>PDFMatrix</shortname>
        <objectwrapper>com.radaee.pdf.Matrix</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF Matrix xx = sx yx = 0; xy = 0; yx = sy;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>sx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>sy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TransformPath</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>TransformRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>TransformPoint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>point</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes the PDF Matrix constructor for full values.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>xx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>xy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>yy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Invert</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TransformInk</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ink</name>
                <type>com.radaee.pdf.Ink</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFInk</name>
        <shortname>PDFInk</shortname>
        <objectwrapper>com.radaee.pdf.Ink</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF Ink.
 class for ink</comment>
            <returntype>void</returntype>
            <parameter>
                <name>line_w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnDraw</name>
            <comment>draw to locked bitmap handle.
bmp,: obtained by Global.lockBitmap()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>OnMove</name>
            <comment>call when moving
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnDown</name>
            <comment>call when click down
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnUp</name>
            <comment>call when click up
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFHWriting</name>
        <shortname>PDFHWriting</shortname>
        <objectwrapper>com.radaee.pdf.HWriting</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF HWriting.
 class for hand-writing ink.
 not same to Ink class, this class has max line width and min line width.
 so the line in HWriting will not in same width.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>min_w</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>max_w</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>clr_r</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>clr_g</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>clr_b</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OnDraw</name>
            <comment>draw to locked bitmap handle.
bmp,: obtained by Global.lockBitmap()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OnMove</name>
            <comment>call when moving
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnDown</name>
            <comment>call when click down
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnUp</name>
            <comment>call when click up
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFGlobal</name>
        <shortname>PDFGlobal</shortname>
        <owner>activity</owner>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Initialize</name>
            <comment>Initializes the Global pdf variable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToPDFRect</name>
            <comment>map DIB rectangle to PDF rectangle.
mat: Matrix object defined scale, rotate, tranlate operations.
drect: input rect in DIB coordinate system. [left, top, right,
            bottom]
prect: output rect in PDF coordinate system. [left, top, right,
            bottom]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>drect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>prect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveTmp</name>
            <comment>Remove all tmp files that "pdfex" library generated.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>LockBitmap</name>
            <comment>lock Bitmap object, and get a handle.
bitmap: Bitmap object.
Return type: @return:hand handle value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>DibGet</name>
            <comment>create or resize dib, and reset all pixels in dib.&lt;br/&gt;
 if dib is 0, function create a new dib object.&lt;br/&gt;
 otherwise function resize the dib object.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawToDIB</name>
            <comment>draw a dib to another dib
dst_dib: 
src_dib: 
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>dst_dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>src_dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawRect</name>
            <comment>fill solid rectangle to bmp.
bmp: handle value, that returned by lockBitmap.
color: the color to fill, formatted: 0xAARRGGBB, AA: alpha value.
x: 
y: 
width: 
height: 
mode: &lt;br/&gt;
            0: mix color by source pixels with alpha channel. &lt;br/&gt;
            1: replace pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToDIBRect</name>
            <comment>map PDF rectangle to DIB rectangle.
mat: Matrix object defined scale, rotate, tranlate operations.
prect: input rect in PDF coordinate system. [left, top, right,
            bottom]
drect: output rect in DIB coordinate system. [left, top, right,
            bottom]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>prect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>drect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>default_config</name>
            <comment>reset to default configure.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToPDFPoint</name>
            <comment>map DIB point to PDF point.
mat: Matrix object defined scale, rotate, tranlate operations.
dpoint: input point in DIB coordinate system. [x, y]
ppoint: output point in PDF coordinate system. [x, y]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>dpoint</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>ppoint</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>DrawRectToDIB</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawToBmp</name>
            <comment>draw dib to bmp.
bmp: handle value, that returned by lockBitmap.
dib: 
x: origin position in bmp.
y: origin position in bmp.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToDIBPoint</name>
            <comment>map PDF point to DIB point.
mat: Matrix object defined scale, rotate, tranlate operations.
ppoint: input point in PDF coordinate system. [x, y]
dpoint: output point in DIB coordinate system. [x, y]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>ppoint</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>dpoint</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>DrawToBmp2</name>
            <comment>draw dib to bmp, with scale
bmp: 
dib: 
x: 
y: 
w: 
h: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>UnlockBitmap</name>
            <comment>unlock Bitmap object, and free the handle.
bitmap: Bitmap object that passed to lockBitmap.
bmp: handle value, that returned by lockBitmap.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DibFree</name>
            <comment>free dib object.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InvertBmp</name>
            <comment>invert all colors for locked bmp.
bmp: handle value, that returned by lockBitmap.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DrawBmpToDIB</name>
            <comment>draw Bitmap object to a dib
dib: 
bmp: handle value, that returned by lockBitmap.
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <field>
            <name>rectColor</name>
            <comment>color for rect annotation.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>def_view</name>
            <comment>default view:&lt;br/&gt;
 0:vertical&lt;br/&gt;
 2:scroll&lt;br/&gt;
 3:single&lt;br/&gt;
 4:SingleEx&lt;br/&gt;
 5:ReFlow&lt;br/&gt;
 6:2 page in landscape</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>inkWidth</name>
            <comment>width for ink lines.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>selRTOL</name>
            <comment>is text selection start from right to left in one line?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>fling_speed</name>
            <comment>fling speed: 0.1-0.4</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>selColor</name>
            <comment>selection color.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>zoomStep</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>zoomLevel</name>
            <comment>max zoom level; valid values: [2, 5]</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>dark_mode</name>
            <comment>render as dark mode?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>inkColor</name>
            <comment>color for ink annotation</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>render_mode</name>
            <comment>render mode: 0:draft 1:normal 2:best</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>fling_dis</name>
            <comment>fling distance: 0.5-2</comment>
            <returntype>float</returntype>
        </field>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFDocument</name>
        <shortname>PDFDocument</shortname>
        <objectwrapper>com.radaee.pdf.Document</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Open</name>
            <comment>open document.&lt;br/&gt;
 first time, SDK try password as user password, and then try password as
 owner password.
path: PDF file to be open.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
         0:succeeded, and continue&lt;br/&gt;
         -1:need input password&lt;br/&gt;
         -2:unknown encryption&lt;br/&gt;
         -3:damaged or invalid format&lt;br/&gt;
         -10:access denied or invalid file path&lt;br/&gt;
         others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setCache</name>
            <comment>set cache file to PDF.&lt;br/&gt;
 a premium license is needed for this method.
path: a path to save some temporary data, compressed images and so
            on
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewImage</name>
            <comment>create an image from Bitmap object.&lt;br/&gt;
 a premium license is needed for this method.
bmp: Bitmap object in ARGB_8888 format.
has_alpha: generate alpha channel information?
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>bmp</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>has_alpha</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPageRotate</name>
            <comment>set page rotate.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
degree: rotate angle in degree, must be 90 * n.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>degree</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPageHeight</name>
            <comment>get page height by page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:height value.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateForStream</name>
            <comment>create a empty PDF document
stream: stream to create
Return type: @return:0 or less than 0 means failed, same as Open.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.Document.PDFStream</type>
            </parameter>
        </method>
        <method>
            <name>RemovePage</name>
            <comment>remove page by page NO.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>is_opened</name>
            <comment>check if opened.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>close the document.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NewRootOutline</name>
            <comment>new a root outline to document, it insert first root outline to Document.&lt;br/&gt;
 the old first root outline, shall be next of this outline.
label: label to display
pageno: pageno to jump
top: y position in PDF coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>NewPage</name>
            <comment>insert a page to Document&lt;br/&gt;
 if pagheno &gt;= page_count, it do same as append.&lt;br/&gt;
 otherwise, insert to pageno.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
w: page width in PDF coordinate
h: page height in PDF coordinate
Return type: @return:Page object or null means failed.</comment>
            <returntype>com.radaee.pdf.Page</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Create</name>
            <comment>create a empty PDF document
path: path to create
Return type: @return:0 or less than 0 means failed, same as Open.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setMeta</name>
            <comment>set meta data for document.&lt;br/&gt;
 this method valid only in premium version.
tag: Predefined values:"Title", "Author", "Subject", "Keywords",
            "Creator", "Producer", "CreationDate", "ModDate".&lt;br/&gt;
            or you can pass any key that self-defined.
val: string value.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>OpenStream</name>
            <comment>open document from stream. first time, SDK try password as user password,
 and then try password as owner password.
stream: PDFStream object.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
         0:succeeded, and continue&lt;br/&gt;
         -1:need input password&lt;br/&gt;
         -2:unknown encryption&lt;br/&gt;
         -3:damaged or invalid format&lt;br/&gt;
         -10:access denied or invalid file path&lt;br/&gt;
         others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.Document.PDFStream</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getURLStream</name>
            <comment></comment>
            <returntype>com.radaee.pdf.Document.PDFStream</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ImportStart</name>
            <comment>Start import operations, import page from src&lt;br/&gt;
 a premium license is needed for this method.&lt;br/&gt;
 you shall maintenance the source Document object until all pages are
 imported and ImportContext.Destroy() invoked.
src: source Document object that opened.
Return type: @return:a context object used in ImportPage.</comment>
            <returntype>com.radaee.pdf.Document.ImportContext</returntype>
            <parameter>
                <name>src</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
        </method>
        <method>
            <name>OpenMem</name>
            <comment>open document in memory. first time, SDK try password as user password,
 and then try password as owner password.
data: data for whole PDF file in byte array. developers should
            retain array data, till document closed.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
         0:succeeded, and continue&lt;br/&gt;
         -1:need input password&lt;br/&gt;
         -2:unknown encryption&lt;br/&gt;
         -3:damaged or invalid format&lt;br/&gt;
         -10:access denied or invalid file path&lt;br/&gt;
         others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ChangePageRect</name>
            <comment>change page rect.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
dl: delta to left, page_left += dl;
dt: delta to top, page_top += dt;
dr: delta to right, page_right += dr;
db: delta to bottom, page_bottom += db;
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dl</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dr</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>db</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>NewImageJPEG</name>
            <comment>create an image from JPEG/JPG file.&lt;br/&gt;
 supported image color space:&lt;br/&gt;
 --GRAY&lt;br/&gt;
 --RGB&lt;br/&gt;
 --CMYK&lt;br/&gt;
 a premium license is needed for this method.
path: path to JPEG file.
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDFDocument.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NewFontCID</name>
            <comment>create a font object, used to write texts.&lt;br/&gt;
 a premium license is needed for this method.
font_name: &lt;br/&gt;
            font name exists in font list.&lt;br/&gt;
            using Global.getFaceCount(), Global.getFaceName() to enumerate
            fonts.
style: &lt;br/&gt;
            (style&amp;1) means bold,&lt;br/&gt;
            (style&amp;2) means Italic,&lt;br/&gt;
            (style&amp;8) means embed,&lt;br/&gt;
            (style&amp;16) means vertical writing, mostly used in Asia fonts.
Return type: @return:DocFont object or null is failed.</comment>
            <returntype>com.radaee.pdf.Document.DocFont</returntype>
            <parameter>
                <name>font_name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>style</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NewImageJPX</name>
            <comment>create an image from JPX/JPEG 2k file.&lt;br/&gt;
 a premium license is needed for this method.
path: path to JPX file.
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getMeta</name>
            <comment>get meta data for document.
tag: Predefined values:"Title", "Author", "Subject", "Keywords",
            "Creator", "Producer", "CreationDate", "ModDate".&lt;br/&gt;
            or you can pass any key that self-defined.
Return type: @return:Meta string value, or null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MovePage</name>
            <comment>move the page to other position.&lt;br/&gt;
 a premium license is needed for this method.
pageno1: page NO, move from
pageno2: page NO, move to
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pageno2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsEncrypted</name>
            <comment>check if document is encrypted.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>NewGState</name>
            <comment>create a ExtGraphicState object, used to set alpha values.&lt;br/&gt;
 a premium license is needed for this method.
Return type: @return:DocGState object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocGState</returntype>
        </method>
        <method>
            <name>getPage</name>
            <comment>get a Page object for page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:Page object</comment>
            <returntype>com.radaee.pdf.Page</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SaveAs</name>
            <comment>save as the document to another file. it remove any security information.&lt;br/&gt;
 this always return false, if no license actived.
path: path to save.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CanSave</name>
            <comment>check if document can be modified or saved.&lt;br/&gt;
 this always return false, if no license actived.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getPageWidth</name>
            <comment>get page width by page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:width value.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Save</name>
            <comment>save the document.&lt;br/&gt;
 this always return false, if no license actived.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ImportPage</name>
            <comment>import a page to the document.&lt;br/&gt;
 a premium license is needed for this method.&lt;br/&gt;
 do not forget to invoke ImportContext.Destroy() after all pages are
 imported.
ctx: context object created from ImportStart
srcno: 0 based page NO. from source Document that passed to
            ImportStart.
dstno: 0 based page NO. to insert in this document object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ctx</name>
                <type>com.radaee.pdf.Document.ImportContext</type>
            </parameter>
            <parameter>
                <name>srcno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstno</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>PageCount</name>
            <returntype>int</returntype>
            <comment>get pages count.</comment>
        </property>
        <property>
            <name>Perm</name>
            <returntype>int</returntype>
            <comment>get permission of PDF, this value defined in "Perm" entry in Catalog
 object</comment>
        </property>
        <property>
            <name>Permission</name>
            <returntype>int</returntype>
            <comment>get permission of PDF, this value defined in PDF reference 1.7&lt;br/&gt;
 bit 1-2 reserved&lt;br/&gt;
 bit 3(0x4) print&lt;br/&gt;
 bit 4(0x8) modify&lt;br/&gt;
 bit 5(0x10) extract text or image&lt;br/&gt;
 others: see PDF reference</comment>
        </property>
        <property>
            <name>Outlines</name>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
            <comment>get first root outline item.</comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFDocument.RSPDFImportContext</name>
        <shortname>PDFImportContext</shortname>
        <objectwrapper>com.radaee.pdf.Document.ImportContext</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the import context.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>importContext</name>
                <type>com.radaee.pdf.Document.ImportContext</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>Destroy context object and free memory used.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFDocument.RSPDFDocOutline</name>
        <shortname>PDFDocOutline</shortname>
        <objectwrapper>com.radaee.pdf.Document.Outline</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the document outline.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>outline</name>
                <type>com.radaee.pdf.Document.Outline</type>
            </parameter>
        </method>
        <method>
            <name>AddChild</name>
            <comment>insert outline as first child of this Outline.&lt;br/&gt;
 a premium license is needed for this method.
label: label of new outline.
pageno: 0 based page NO.
top: y in PDF coordinate.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFromDoc</name>
            <comment>remove this Outline, and all children of this Outline.&lt;br/&gt;
 this method connect previous Outline and next Outline.&lt;br/&gt;
 a premium license is needed for this method.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTitle</name>
            <comment>set label of Outline.&lt;br/&gt;
 a premium license is needed for this method.
title: title to set
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddNext</name>
            <comment>insert outline after of this Outline.&lt;br/&gt;
 a premium license is needed for this method.
label: label of new outline.
pageno: 0 based page NO.
top: y in PDF coordinate.
Return type: @return:true of false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Next</name>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
            <comment>get next</comment>
        </property>
        <property>
            <name>Dest</name>
            <returntype>int</returntype>
            <comment>get jumping page NO.</comment>
        </property>
        <property>
            <name>Child</name>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
            <comment>get first child</comment>
        </property>
        <property>
            <name>Title</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFDocument.RSPDFDocFont</name>
        <shortname>PDFDocFont</shortname>
        <objectwrapper>com.radaee.pdf.Document.DocFont</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the doc font.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pdfFont</name>
                <type>com.radaee.pdf.Document.DocFont</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Descent</name>
            <returntype>float</returntype>
            <comment>get descent</comment>
        </property>
        <property>
            <name>Ascent</name>
            <returntype>float</returntype>
            <comment>get ascent</comment>
        </property>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFDocument.RSPPDFDocGState</name>
        <shortname>PDFDocGState</shortname>
        <objectwrapper>com.radaee.pdf.Document.DocGState</objectwrapper>
        <owner>process</owner>
        <method>
            <name>setFillAlpha</name>
            <comment>set alpha value for fill and other non-stroke operation
alpha: range: [0, 255]
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the DocGState</comment>
            <returntype>void</returntype>
            <parameter>
                <name>docGState</name>
                <type>com.radaee.pdf.Document.DocGState</type>
            </parameter>
        </method>
        <method>
            <name>setStrokeAlpha</name>
            <comment>set alpha value for stroke operation
alpha: range: [0, 255]
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFBMDatabase</name>
        <shortname>PDFBMDatabase</shortname>
        <objectwrapper>com.radaee.pdf.BMDatabase</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the BookMark database.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RecItemGetPage</name>
            <comment>Get page no by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:0 based page NO.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecItemRemove</name>
            <comment>remove item by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecGetCount</name>
            <comment>Get items count of RecordSet.
rec: RecordSet Handle, obtained by RecOpen
Return type: @return:records count</comment>
            <returntype>int</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecItemInsert</name>
            <comment>insert item.
rec: RecordSet Handle that returned by RecOpen
name: label of BookMark.
pageno: 0 based page no recorded.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecOpen</name>
            <comment>Get a RecordSet handle, by input PDF file path
look_path: PDF path to lookup.
Return type: @return:handle value of RecordSet.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>look_path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>OpenOrCreate</name>
            <comment>Open exist database file or create it if not exist. (Database for
 BookMark)
db_path: 
Return type: @return:</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>db_path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>close database</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RecClose</name>
            <comment>Close a RecordSet handle
rec: handle value of RecordSet. obtained by RecOpen</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecItemGetName</name>
            <comment>Get item name by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:name of item.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.rootsoft.rspdfviewer.pdf.RSPDFAnnotation</name>
        <shortname>PDFAnnotation</shortname>
        <objectwrapper>com.radaee.pdf.Page.Annotation</objectwrapper>
        <owner>process</owner>
        <method>
            <name>GetPolylinePath</name>
            <comment>get Path object from Polyline annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetStrokeWidth</name>
            <comment>get stroke width of square/circle/ink/line/ploygon/polyline/free text
 annotation.&lt;br/&gt;
 for free text annotation: width of edit-box border&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:width value in PDF coordinate, or 0 if error.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>GetFieldFullName2</name>
            <comment>get full name of the annotation with more details.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or full name of the annotation, example:
         "Form1[0].EditBox1[0]".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetStrokeColor</name>
            <comment>set stroke color of
 square/circle/ink/line/underline/Squiggly/strikeout/ploygon/polyline/free
 text annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
color: color value formatted as 0xAARRGGBB, if alpha channel is too
            less or 0, return false.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetComboItem</name>
            <comment>get an item of combo-box.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index. range:[0, GetAnnotComboItemCount()-1]
Return type: @return:null if this is not combo-box, "" if no item selected, otherwise
         the item selected.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RenderToBmp</name>
            <comment>render an annotation to Bitmap. this method fully scale annotation to
 bitmap object.&lt;br/&gt;
 this method valid in professional or premium version.&lt;br/&gt;
 Notice 1: the render result may not correct for some annotation that not
 used Alpha Color blending.&lt;br/&gt;
 example: highlight annotation may not render correctly.&lt;br/&gt;
 Notice 2: you can invoke Global.hideAnnots() in Global.Init(), and invoke
 this method to handle Annotations by yourself.
bitmap: Bitmap object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>GetPopupSubject</name>
            <comment>get annotation's popup subject.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:subject string or null if failed.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetMovie</name>
            <comment>get annotation's movie name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the movie, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetPopupText</name>
            <comment>set annotation's popup text.&lt;br/&gt;
 this method valid in professional or premium version
val: text string
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetSoundData</name>
            <comment>get annotation's sound data.&lt;br/&gt;
 this method valid in professional or premium version
paras: paras[0] == 0, if formated audio file(*.mp3 ...).
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>paras</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetEditTextRect</name>
            <comment>get position and size of edit-box.&lt;br/&gt;
 for FreeText annotation, position of edit-box is not the position of
 annotation.&lt;br/&gt;
 so this function is needed for edit-box. this method valid in premium
 version
rect: 4 elements in order: left, top, right, bottom, in PDF
            coordinate.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>GetFillColor</name>
            <comment>get fill color of square/circle/highlight/line/ploygon/polyline/sticky
 text/free text annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:color value formatted as 0xAARRGGBB, if 0 returned, means false.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetPolygonPath</name>
            <comment>get Path object from Polygon annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetStrokeColor</name>
            <comment>get stroke color of
 square/circle/ink/line/underline/Squiggly/strikeout/ploygon/polyline/free
 text annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:color value formatted as 0xAARRGGBB, if 0 returned, means false.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initializes the PDF Annotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>annotation</name>
                <type>com.radaee.pdf.Page.Annotation</type>
            </parameter>
        </method>
        <method>
            <name>SetStrokeWidth</name>
            <comment>set stroke width of square/circle/ink/line/ploygon/polyline/free text
 annotation.&lt;br/&gt;
 for free text annotation: width of edit-box border&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
width: stroke width in PDF coordinate.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetPopupText</name>
            <comment>get annotation's popup text.&lt;br/&gt;
 this method valid in professional or premium version.
Return type: @return:text string or null if failed.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsLocked</name>
            <comment>check if position and size of the annotation is locked?&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true if locked, or not locked.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSound</name>
            <comment>get annotation's sound name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the audio, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get3D</name>
            <comment>get annotation's 3D object name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the 3D object, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetRect</name>
            <comment>get annotation's box rectangle.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:4 elements: left, top, right, bottom in PDF coordinate system</comment>
            <returntype>float[]</returntype>
        </method>
        <method>
            <name>GetListItemCount</name>
            <comment>get item count of list-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1: this is not a list. otherwise: items count.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetListSels</name>
            <comment>get selected indexes of list-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not a list-box, or no items selected.</comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>GetSubmitPara</name>
            <comment>get annotation submit parameters.&lt;br/&gt;
 mail mode: return whole XML string for form data.&lt;br/&gt;
 other mode: url data likes: "para1=xxx&amp;para2=xxx".&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if this is not submit button.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetPopupSubject</name>
            <comment>set annotation's popup subject.&lt;br/&gt;
 this method valid in professional or premium version
val: subject string
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetInkPath</name>
            <comment>get Path object from Ink annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetIcon</name>
            <comment>get icon value for sticky text note/file attachment/Rubber Stamp
 annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:icon value depends on annotation type.&lt;br/&gt;
         &lt;strong&gt;For sticky text note:&lt;/strong&gt;&lt;br/&gt;
         0: Note&lt;br/&gt;
         1: Comment&lt;br/&gt;
         2: Key&lt;br/&gt;
         3: Help&lt;br/&gt;
         4: NewParagraph&lt;br/&gt;
         5: Paragraph&lt;br/&gt;
         6: Insert&lt;br/&gt;
         7: Check&lt;br/&gt;
         8: Circle&lt;br/&gt;
         9: Cross&lt;br/&gt;
         &lt;strong&gt;For file attachment:&lt;/strong&gt;&lt;br/&gt;
         0: PushPin&lt;br/&gt;
         1: Graph&lt;br/&gt;
         2: Paperclip&lt;br/&gt;
         3: Tag&lt;br/&gt;
         &lt;strong&gt;For Rubber Stamp:&lt;/strong&gt;&lt;br/&gt;
         0: "Draft"(default icon)&lt;br/&gt;
         1: "Approved"&lt;br/&gt;
         2: "Experimental"&lt;br/&gt;
         3: "NotApproved"&lt;br/&gt;
         4: "AsIs"&lt;br/&gt;
         5: "Expired"&lt;br/&gt;
         6: "NotForPublicRelease"&lt;br/&gt;
         7: "Confidential"&lt;br/&gt;
         8: "Final"&lt;br/&gt;
         9: "Sold"&lt;br/&gt;
         10: "Departmental"&lt;br/&gt;
         11: "ForComment"&lt;br/&gt;
         12: "TopSecret"&lt;br/&gt;
         13: "ForPublicRelease"&lt;br/&gt;
         14: "Accepted"&lt;br/&gt;
         15: "Rejected"&lt;br/&gt;
         16: "Witness"&lt;br/&gt;
         17: "InitialHere"&lt;br/&gt;
         18: "SignHere"&lt;br/&gt;
         19: "Void"&lt;br/&gt;
         20: "Completed"&lt;br/&gt;
         21: "PreliminaryResults"&lt;br/&gt;
         22: "InformationOnly"&lt;br/&gt;
         23: "End"&lt;br/&gt;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetRadio</name>
            <comment>check the radio-box and deselect others in radio group.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSubmitTarget</name>
            <comment>get annotation submit target.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if this is not submit button.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetFieldFullName</name>
            <comment>get name of the annotation.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or full name of the annotation, example:
         "Form1.EditBox1".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetEditMaxlen</name>
            <comment>get max-len of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:0 if no limit, great than 0 if has limit.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetPolygonPath</name>
            <comment>set Path to Polygon annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetType</name>
            <comment>get annotation type.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:type as these values:&lt;br/&gt;
         0: unknown&lt;br/&gt;
         1: text&lt;br/&gt;
         2: link&lt;br/&gt;
         3: free text&lt;br/&gt;
         4: line&lt;br/&gt;
         5: square&lt;br/&gt;
         6: circle&lt;br/&gt;
         7: polygon&lt;br/&gt;
         8: polyline&lt;br/&gt;
         9: text hilight&lt;br/&gt;
         10: text under line&lt;br/&gt;
         11: text squiggly&lt;br/&gt;
         12: text strikeout&lt;br/&gt;
         13: stamp&lt;br/&gt;
         14: caret&lt;br/&gt;
         15: ink&lt;br/&gt;
         16: popup&lt;br/&gt;
         17: file attachment&lt;br/&gt;
         18: sound&lt;br/&gt;
         19: movie&lt;br/&gt;
         20: widget&lt;br/&gt;
         21: screen&lt;br/&gt;
         22: print mark&lt;br/&gt;
         23: trap net&lt;br/&gt;
         24: water mark&lt;br/&gt;
         25: 3d object&lt;br/&gt;
         26: rich media</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetListSels</name>
            <comment>set selects of list-box this method valid in premium version
items: 0 based indexes of items.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>items</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>GetFieldType</name>
            <comment>get annotation field type in acroForm.&lt;br/&gt;
 this method valid in premium version
Return type: @return:type as these values:&lt;br/&gt;
         0: unknown&lt;br/&gt;
         1: button field&lt;br/&gt;
         2: text field&lt;br/&gt;
         3: choice field&lt;br/&gt;
         4: signature field&lt;br/&gt;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetComboItemSel</name>
            <comment>get current selected item index of combo-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1 if this is not combo-box or no item selected, otherwise the
         item index that selected.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetListItem</name>
            <comment>get an item of list-box.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index. range:[0, GetListItemCount()-1]
Return type: @return:null if this is not list-box, "" if no item selected, otherwise
         the item selected.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetIcon</name>
            <comment>set icon for sticky text note/file attachment/Rubber Stamp annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
icon: icon value depends on annotation type.&lt;br/&gt;
            &lt;strong&gt;For sticky text note:&lt;/strong&gt;&lt;br/&gt;
            0: Note&lt;br/&gt;
            1: Comment&lt;br/&gt;
            2: Key&lt;br/&gt;
            3: Help&lt;br/&gt;
            4: NewParagraph&lt;br/&gt;
            5: Paragraph&lt;br/&gt;
            6: Insert&lt;br/&gt;
            7: Check&lt;br/&gt;
            8: Circle&lt;br/&gt;
            9: Cross&lt;br/&gt;
            &lt;strong&gt;For file attachment:&lt;/strong&gt;&lt;br/&gt;
            0: PushPin&lt;br/&gt;
            1: Graph&lt;br/&gt;
            2: Paperclip&lt;br/&gt;
            3: Tag&lt;br/&gt;
            &lt;strong&gt;For Rubber Stamp:&lt;/strong&gt;&lt;br/&gt;
            0: "Draft"(default icon)&lt;br/&gt;
            1: "Approved"&lt;br/&gt;
            2: "Experimental"&lt;br/&gt;
            3: "NotApproved"&lt;br/&gt;
            4: "AsIs"&lt;br/&gt;
            5: "Expired"&lt;br/&gt;
            6: "NotForPublicRelease"&lt;br/&gt;
            7: "Confidential"&lt;br/&gt;
            8: "Final"&lt;br/&gt;
            9: "Sold"&lt;br/&gt;
            10: "Departmental"&lt;br/&gt;
            11: "ForComment"&lt;br/&gt;
            12: "TopSecret"&lt;br/&gt;
            13: "ForPublicRelease"&lt;br/&gt;
            14: "Accepted"&lt;br/&gt;
            15: "Rejected"&lt;br/&gt;
            16: "Witness"&lt;br/&gt;
            17: "InitialHere"&lt;br/&gt;
            18: "SignHere"&lt;br/&gt;
            19: "Void"&lt;br/&gt;
            20: "Completed"&lt;br/&gt;
            21: "PreliminaryResults"&lt;br/&gt;
            22: "InformationOnly"&lt;br/&gt;
            23: "End"&lt;br/&gt;
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCheckStatus</name>
            <comment>get status of check-box and radio-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:&lt;br/&gt;
         -1 if annotation is not valid control.&lt;br/&gt;
         0 if check-box is not checked.&lt;br/&gt;
         1 if check-box checked.&lt;br/&gt;
         2 if radio-box is not checked.&lt;br/&gt;
         3 if radio-box checked.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditTextSize</name>
            <comment>get text size of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:size of text, in PDF coordinate system.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>RemoveFromPage</name>
            <comment>remove annotation&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetAttachmentData</name>
            <comment>get annotation's attachment data.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetFillColor</name>
            <comment>set fill color of square/circle/highlight/line/ploygon/polyline/sticky
 text/free text annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
color: color value formatted as 0xAARRGGBB, if alpha channel is too
            less or 0, return false.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDest</name>
            <comment>get annotation's destination.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:0 based page NO, or -1 if failed.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetMovieData</name>
            <comment>get annotation's movie data.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get3DData</name>
            <comment>get annotation's 3D data. must be *.u3d format.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetPolylinePath</name>
            <comment>set Path to Polyline annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetMarkupRects</name>
            <comment>get markup annotation's boxes.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:float array, container many boxes.&lt;br/&gt;
         each 4 elements defined a box, as [left, top, right, bottom] in
         PDF coordinate.&lt;br/&gt;
         length of this array must be 4 times.</comment>
            <returntype>float[]</returntype>
        </method>
        <method>
            <name>SetInkPath</name>
            <comment>set Path to Ink annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetReset</name>
            <comment>check if the annotation is reset button?&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetEditText</name>
            <comment>set contents of edit-box.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
text: contents to be set.&lt;br/&gt;
            in MultiLine mode: '\r' or '\n' means change line.&lt;br/&gt;
            in password mode the edit box always display "*".
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsLockedContent</name>
            <comment>check if texts of the annotation is locked?&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true if locked, or not locked.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetComboItem</name>
            <comment>set current selected.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index to set.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetCheckValue</name>
            <comment>set value to check-box.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
check: true or false.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>check</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetFieldName</name>
            <comment>get name of the annotation.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or name of the annotation, example:
         "EditBox1[0]".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetRect</name>
            <comment>set annotation's box rectangle.&lt;br/&gt;
 this method valid in professional or premium version.&lt;br/&gt;
 you shall render page after this invoked, to resize or move annotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveToPage</name>
            <comment>move annotation to another page.&lt;be/&gt; this method valid in professional
 or premium version.&lt;br/&gt;
 this method just like invoke Page.CopyAnnot() and
 Annotation.RemoveFromPage(), but, less data generated.&lt;br/&gt;
 Notice: ObjsStart or RenderXXX shall be invoked for dst_page.
dst_page: page to move.
rect: [left, top, right, bottom] in PDF coordinate in dst_page.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dst_page</name>
                <type>com.radaee.pdf.Page</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>SetHide</name>
            <comment>set hide status for annotation. this method valid in professional or
 premium version.&lt;br/&gt;
 you shall render page after this invoked, to hide annotation.
hide: true or false.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hide</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetURI</name>
            <comment>get annotation's URL link string.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:string of URL, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetReset</name>
            <comment>perform the button and reset the form.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSignStatus</name>
            <comment>get status of signature field.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1 if this is not signature field&lt;br/&gt;
         0 if not signed.&lt;br/&gt;
         1 if signed.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditType</name>
            <comment>get type of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:&lt;br/&gt;
         -1: this annotation is not text-box.&lt;br/&gt;
         1: normal single line.&lt;br/&gt;
         2: password.&lt;br/&gt;
         3: MultiLine edit area.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditText</name>
            <comment>get contents of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:content in edit-box</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetComboItemCount</name>
            <comment>get item count of combo-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1: this is not combo. otherwise: items count.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsHide</name>
            <comment>check whether the annotation is hide.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetAttachment</name>
            <comment>get annotation's attachment name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the attachment, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>IndexInPage</name>
            <returntype>int</returntype>
            <comment>get this annotation index in page.</comment>
        </property>
        <property>
            <name>Locked</name>
            <parameter>
                <name>lock</name>
                <type>boolean</type>
            </parameter>
            <comment>set annotation lock status.&lt;br/&gt;</comment>
        </property>
    </class>
    <class>
        <name>com.radaee.pdf.PDFHttpStream</name>
        <comment>a class for HttpURLConnection.&lt;br/&gt;
 the class read PDF file in remote way, this class not support write back to server.&lt;br/&gt;
 the server must support Http header "Range" for request, and "content-length" for response.&lt;br/&gt;
 and this class need Internet access right to run.</comment>
        <owner>process</owner>
        <method>
            <name>open</name>
            <comment>open an url as stream
url: url address.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>write</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>read</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>writeable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>tell</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>seek</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>close</name>
            <comment>free resources.&lt;br/&gt;
 this method is needed when APP close the PDF.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>_size</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.radaee.pdf.PDFHttpStream.HttpThread</name>
        <comment>Inner class.&lt;br/&gt;
        developer should not use this.</comment>
        <owner>process</owner>
        <method>
            <name>suspend</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>currentThread</name>
            <comment></comment>
            <returntype>java.lang.Thread</returntype>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dumpStack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>checkAccess</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>countStackFrames</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>yield</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>activeCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>join</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>enumerate</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread[]</type>
            </parameter>
        </method>
        <method>
            <name>run</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>sleep</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>interrupt</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDaemon</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>read_range</name>
            <comment></comment>
            <returntype>byte[]</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.PDFHttpStream</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>len</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>destroy</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isInterrupted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>resume</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>interrupted</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>holdsLock</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>isAlive</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>get_size</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.PDFHttpStream</type>
            </parameter>
        </method>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>UncaughtExceptionHandler</name>
            <returntype>java.lang.Thread.UncaughtExceptionHandler</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread.UncaughtExceptionHandler</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DefaultUncaughtExceptionHandler</name>
            <returntype>java.lang.Thread.UncaughtExceptionHandler</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Thread.UncaughtExceptionHandler</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype EnumType="true">java.lang.Thread.State</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ThreadGroup</name>
            <returntype>java.lang.ThreadGroup</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ContextClassLoader</name>
            <returntype>java.lang.ClassLoader</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.ClassLoader</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Daemon</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AllStackTraces</name>
            <returntype>java.util.Map</returntype>
            <comment></comment>
        </property>
        <property>
            <name>StackTrace</name>
            <returntype>java.lang.StackTraceElement[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Priority</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>MAX_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MIN_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NORM_PRIORITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.radaee.pdf.Path</name>
        <comment>class for Path</comment>
        <owner>process</owner>
        <method>
            <name>GetNodeCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>LineTo</name>
            <comment>line to operation
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveTo</name>
            <comment>move to operation
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetNode</name>
            <comment>get each node
index: range [0, GetNodeCount() - 1]
pt: output value: 2 elements coordinate point
Return type: @return:node type:&lt;br/&gt;
 0: move to&lt;br/&gt;
 1: line to&lt;br/&gt;
 3: curve to, index, index + 1, index + 2 are all data&lt;br/&gt;
 4: close operation&lt;br/&gt;</comment>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ClosePath</name>
            <comment>close a contour.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CurveTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x3</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y3</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>free memory</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.PageContent</name>
        <owner>process</owner>
        <method>
            <name>TextSetFont</name>
            <comment>set text font
font: ResFont object created by Page.AddResFont()
size: text size in PDF coordinate.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Page.ResFont</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>StrokePath</name>
            <comment>stroke path.
path: Path object</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>SetStrokeColor</name>
            <comment>PDF operator: set stroke color.
color: formatted as 0xRRGGBB, no alpha channel. alpha value shall set by ExtGraphicState(ResGState).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextGetSize</name>
            <comment>reserved.
font: 
text: test to display, may container '\r' or '\n'
width: font width
height: font height
char_space: 
word_space: 
Return type: @return:</comment>
            <returntype>float[]</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Page.ResFont</type>
            </parameter>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>char_space</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>word_space</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextNextLine</name>
            <comment>PDF operator: new a text line</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FillPath</name>
            <comment>fill path.
path: Path object
winding: winding fill rule?</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>TextSetCharSpace</name>
            <comment>PDF operator: set char space(extra space between chars).
space: char space</comment>
            <returntype>void</returntype>
            <parameter>
                <name>space</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetLeading</name>
            <comment>PDF operator: set text leading, height between 2 text lines.
leading: leading in PDF coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>leading</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetRise</name>
            <comment>PDF operator: set text rise
rise: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>rise</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetFillColor</name>
            <comment>PDF operator: set fill and other operations color.
color: formatted as 0xRRGGBB, no alpha channel. alpha value shall set by ExtGraphicState(ResGState).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Create</name>
            <comment>create it.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DrawText</name>
            <comment>show text
text: text to show, '\r' or '\n' in string start a new line.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GSSet</name>
            <comment>PDF operator: set ExtGraphicState
gs: ResGState object created by Page.AddResGState()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>gs</name>
                <type>com.radaee.pdf.Page.ResGState</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeWidth</name>
            <comment>PDF operator: set line width
w: line width in PDF coordinate</comment>
            <returntype>void</returntype>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ClipPath</name>
            <comment>set the path as clip path.
path: Path object
winding: winding fill rule?</comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>DrawImage</name>
            <comment>PDF operator: show image.
image: image object created by Page.AddResImage()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>image</name>
                <type>com.radaee.pdf.Page.ResImage</type>
            </parameter>
        </method>
        <method>
            <name>TextBegin</name>
            <comment>PDF operator: begin text and set text position to (0,0).</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TextEnd</name>
            <comment>PDF operator: text end.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeCap</name>
            <comment>PDF operator: set line cap
cap: 0:butt, 1:round: 2:square</comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetStrokeJoin</name>
            <comment>PDF operator: set line join
join: 0:miter, 1:round, 2:bevel</comment>
            <returntype>void</returntype>
            <parameter>
                <name>join</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GSSave</name>
            <comment>PDF operator: gs_save, save current GraphicState</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetStrokeMiter</name>
            <comment>PDF operator: set miter limit.
miter: miter limit.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>miter</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GSSetMatrix</name>
            <comment>PDF operator: set matrix.
mat: Matrix object</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>GSRestore</name>
            <comment>PDF operator: gs_restore, restore GraphicState</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TextSetHScale</name>
            <comment>PDF operator: set horizon scale for chars.
scale: 100 means scale value 1.0f</comment>
            <returntype>void</returntype>
            <parameter>
                <name>scale</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextSetRenderMode</name>
            <comment>PDF operator: set text render mode.
mode: &lt;br/&gt;
 0: filling&lt;br/&gt;
 1: stroke&lt;br/&gt;
 2: fill and stroke&lt;br/&gt;
 3: do nothing&lt;br/&gt;
 4: fill and set clip path&lt;br/&gt;
 5: stroke and set clip path&lt;br/&gt;
 6: fill/stroke/clip&lt;br/&gt;
 7: set clip path.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TextMove</name>
            <comment>PDF operator: move text position relative to previous line
x: in PDF coordinate add to previous line position
y: in PDF coordinate add to previous line position</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TextSetWordSpace</name>
            <comment>PDF operator: set word space(extra space between words spit by blank char ' ' ).
space: word space.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>space</name>
                <type>float</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Page</name>
        <comment>class for PDF Page.</comment>
        <owner>process</owner>
        <method>
            <name>RenderIsFinished</name>
            <comment>check if page rendering is finished.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ObjsStart</name>
            <comment>get text objects to memory.&lt;br/&gt;
 a standard license is needed for this method</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddAnnotEllipse</name>
            <comment>add ellipse to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rect: 4 elements for left, top, right, bottom in DIB coordinate system
width: line width
color: ellipse color, formated as 0xAARRGGBB
fill_color: fill color in ellipse, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAnnotFromPoint</name>
            <comment>get annotations by PDF point.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
x: x value in PDF coordinate system.
y: y value in PDF coordinate system.
Return type: @return:handle of annotation, valid until Close invoked.</comment>
            <returntype>com.radaee.pdf.Page.Annotation</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ReflowToBmp</name>
            <comment>Reflow to Bitmap object.&lt;br/&gt;
 this method valid in professional or premium version
bitmap: bitmap to reflow
orgx: origin x coordinate
orgy: origin y coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotText</name>
            <comment>add a sticky text annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
pt: 2 elements: x, y in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetParaCount</name>
            <comment>get reflow paragraph count.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:count</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>RenderCancel</name>
            <comment>set page status to cancelled and cancel render function.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderToBmp</name>
            <comment>render page to Bitmap object directly. this function returned for cancelled or finished.&lt;br/&gt;before render, you need erase Bitmap object.
bitmap: Bitmap object to render.
mat: Matrix object define scale, rotate, translate operations.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotStamp</name>
            <comment>add an Rubber Stamp to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: icon area rect [left, top, right, bottom] in PDF coordinate.
icon: predefined value as below:&lt;br/&gt;
  0: "Draft"(default icon)&lt;br/&gt;
  1: "Approved"&lt;br/&gt;
  2: "Experimental"&lt;br/&gt;
  3: "NotApproved"&lt;br/&gt;
  4: "AsIs"&lt;br/&gt;
  5: "Expired"&lt;br/&gt;
  6: "NotForPublicRelease"&lt;br/&gt;
  7: "Confidential"&lt;br/&gt;
  8: "Final"&lt;br/&gt;
  9: "Sold"&lt;br/&gt;
 10: "Departmental"&lt;br/&gt;
 11: "ForComment"&lt;br/&gt;
 12: "TopSecret"&lt;br/&gt;
 13: "ForPublicRelease"&lt;br/&gt;
 14: "Accepted"&lt;br/&gt;
 15: "Rejected"&lt;br/&gt;
 16: "Witness"&lt;br/&gt;
 17: "InitialHere"&lt;br/&gt;
 18: "SignHere"&lt;br/&gt;
 19: "Void"&lt;br/&gt;
 20: "Completed"&lt;br/&gt;
 21: "PreliminaryResults"&lt;br/&gt;
 22: "InformationOnly"&lt;br/&gt;
 23: "End"&lt;br/&gt;
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharFontName</name>
            <comment>get char's font name. this can be invoked after ObjsStart
index: 0 based unicode index.
Return type: @return:font name, may be null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotPolyline</name>
            <comment>add polyline to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: must be a set of unclosed lines. do not container any move-to operation except the first point in the path.
style1: style for start point:&lt;br/&gt;
 0: None&lt;br/&gt;
 1: Arrow&lt;br/&gt;
 2: Closed Arrow&lt;br/&gt;
 3: Square&lt;br/&gt;
 4: Circle&lt;br/&gt;
 5: Butt&lt;br/&gt;
 6: Diamond&lt;br/&gt;
 7: Reverted Arrow&lt;br/&gt;
 8: Reverted Closed Arrow&lt;br/&gt;
 9: Slash
style2: style for end point, values are same as style1.
color: stroke color formated as 0xAARRGGBB.
fill_color: fill color, formated as 0xAARRGGBB. if AA == 0, no fill operations, otherwise alpha value is same to stroke color.
width: stroke width in PDF coordinate
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>style1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharRect</name>
            <comment>get char's box in PDF coordinate system, this can be invoked after ObjsStart
index: 0 based unicode index.
vals: return 4 elements for PDF rectangle.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>vals</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharUnicode</name>
            <comment>get char's unicode value.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:unicode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetString</name>
            <comment>get string from range. this can be invoked after ObjsStart
from: 0 based unicode index.
to: 0 based unicode index.
Return type: @return:string or null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>from</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>to</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddResFont</name>
            <comment>add a font as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
font: font object created by Document.NewFontCID()
Return type: @return:ResFont or null.</comment>
            <returntype>com.radaee.pdf.Page.ResFont</returntype>
            <parameter>
                <name>font</name>
                <type>com.radaee.pdf.Document.DocFont</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharWidth</name>
            <comment>get char's font width.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:font width for this char</comment>
            <returntype>float</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotGoto</name>
            <comment>add goto-page link to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: link area rect [left, top, right, bottom] in PDF coordinate.
pageno: 0 based pageno to goto.
top: y coordinate in PDF coordinate, page.height is top of page. and 0 is bottom of page.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotRect</name>
            <comment>add rectangle to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rect: 4 elements for left, top, right, bottom in DIB coordinate system
width: line width
color: rectangle color, formated as 0xAARRGGBB
fill_color: fill color in rectangle, formated as 0xAARRGGBB, if alpha channel is 0, means no fill operation, otherwise alpha channel are ignored.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetRotate</name>
            <comment>get rotate degree for page, example: 0 or 90
page: 
Return type: @return:rotate degree for page</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ReflowGetCharFont</name>
            <comment>get char's font name.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:name string</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharColor</name>
            <comment>get char's fill color for display.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:color value formatted 0xAARRGGBB, AA: alpha value, RR:red, GG:green, BB:blue</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Render</name>
            <comment>render page to dib object. this function returned for cancelled or finished.&lt;br/&gt;before render, you need invoke RenderPrePare.
dib: DIB object to render. obtained by Global.dibGet().
mat: Matrix object define scale, rotate, translate operations.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharIndex</name>
            <comment>get char index nearest to point
pt: point as [x,y] in PDF coordinate.
Return type: @return:char index or -1 failed.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>pt</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>AddResImage</name>
            <comment>add an image as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
image: image object created by Document.NewImage() or Document.NewImageJPEG()
Return type: @return:null means failed.</comment>
            <returntype>com.radaee.pdf.Page.ResImage</returntype>
            <parameter>
                <name>image</name>
                <type>com.radaee.pdf.Document.DocImage</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharRect</name>
            <comment>get char's bound box.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
rect: output: 4 element as [left, top, right, bottom].</comment>
            <returntype>void</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ObjsGetCharCount</name>
            <comment>get chars count in this page. this can be invoked after ObjsStart&lt;br/&gt;
 a standard license is needed for this method
Return type: @return:count or 0 if ObjsStart not invoked.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ReflowGetText</name>
            <comment>get text from range.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph1: first position
ichar1: first position
iparagraph2: second position
ichar2: second position
Return type: @return:string value or null</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>iparagraph1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>iparagraph2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotURI</name>
            <comment>add URL link to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
rect: link area rect [left, top, right, bottom] in PDF coordinate.
uri: url address, example: "http://www.radaee.com/en"
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotAttachment</name>
            <comment>add a file as an attachment to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: absolute path name to the file.
icon: icon display to the page. values as:&lt;br/&gt;
 0: PushPin&lt;br/&gt;
 1: Graph&lt;br/&gt;
 2: Paperclip&lt;br/&gt;
 3: Tag&lt;br/&gt;
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Reflow</name>
            <comment>Reflow to dib.&lt;br/&gt;
 this method valid in professional or premium version
dib: dib to render
orgx: origin x coordinate
orgy: origin y coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Render_Normal</name>
            <comment>render to page in normal quality
dib: same as Render function
mat: same as Render function</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotLine</name>
            <comment>add line to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
pt1: start point, 2 elements for x,y
pt2: end point, 2 elements for x,y
style1: style for start point:&lt;br/&gt;
 0: None&lt;br/&gt;
 1: Arrow&lt;br/&gt;
 2: Closed Arrow&lt;br/&gt;
 3: Square&lt;br/&gt;
 4: Circle&lt;br/&gt;
 5: Butt&lt;br/&gt;
 6: Diamond&lt;br/&gt;
 7: Reverted Arrow&lt;br/&gt;
 8: Reverted Closed Arrow&lt;br/&gt;
 9: Slash
style2: style for end point, values are same as style1.
width: line width in DIB coordinate
color: line color. same as addAnnotRect.
fill_color: fill color. same as addAnnotRect.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>pt1</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>pt2</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>style1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotMarkup</name>
            <comment>add a text-markup annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
rects: 4 * n rectangles, each 4 elements: left, top, right, bottom in DIB coordinate system. n is decided by length of array.
type: 0: Highlight, 1: Underline, 2: StrikeOut, 3: Highlight without round corner.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>rects</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAnnot</name>
            <comment>get annotations by index.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
index: 0 based index value. range:[0, GetAnnotCount()-1]
Return type: @return:handle of annotation, valid until Close invoked.</comment>
            <returntype>com.radaee.pdf.Page.Annotation</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAnnotCount</name>
            <comment>get annotations count in this page.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:count</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ReflowGetCharCount</name>
            <comment>get one paragraph's char count.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
Return type: @return:char count</comment>
            <returntype>int</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>Close page object and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RenderPrePare</name>
            <comment>prepare to render. it reset dib pixels to white value, and reset page status.
dib: DIB object to render. obtained by Global.dibGet().</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddResGState</name>
            <comment>add GraphicState as resource of this page.&lt;br/&gt;
 a premium license is needed for this method.
gstate: ExtGraphicState created by Document.NewGState();
Return type: @return:null means failed.</comment>
            <returntype>com.radaee.pdf.Page.ResGState</returntype>
            <parameter>
                <name>gstate</name>
                <type>com.radaee.pdf.Document.DocGState</type>
            </parameter>
        </method>
        <method>
            <name>AddContent</name>
            <comment>add content stream to this page.&lt;br/&gt;
 a premium license is needed for this method.
content: PageContent object called PageContent.create().
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>content</name>
                <type>com.radaee.pdf.PageContent</type>
            </parameter>
        </method>
        <method>
            <name>FindOpen</name>
            <comment>create a find session. this can be invoked after ObjsStart
str: key string to find.
match_case: match case?
whole_word: match whole word?
Return type: @return:handle of find session, or 0 if no found.</comment>
            <returntype>com.radaee.pdf.Page.Finder</returntype>
            <parameter>
                <name>str</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>match_case</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>whole_word</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotGlyph</name>
            <comment>add a user-defined glyph to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
path: Path object.
color: text color, formated as 0xAARRGGBB.
winding: if true, using winding fill rule, otherwise using odd-even fill rule.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>winding</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotHWriting</name>
            <comment>add hand-writing to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
hwriting: hand writing object
orgx: origin x coordinate in page. in DIB coordinate system
orgy: origin y coordinate in page. in DIB coordinate system
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>hwriting</name>
                <type>com.radaee.pdf.HWriting</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotBitmap</name>
            <comment>add a bitmap object as an annotation to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
bitmap: Bitmap object to add, which should be formated in ARGB_8888
has_alpha: is need to save alpha channel information?
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>has_alpha</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>ReflowGetCharHeight</name>
            <comment>get char's font height.&lt;br/&gt;
 this method valid in professional or premium version
iparagraph: paragraph index range[0, ReflowGetParaCount()-1]
ichar: char index range[0, ReflowGetCharCount()]
Return type: @return:font height for this char</comment>
            <returntype>float</returntype>
            <parameter>
                <name>iparagraph</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ichar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotInk</name>
            <comment>add hand-writing to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
mat: Matrix for Render function.
ink: Ink object
orgx: origin x coordinate in page. in DIB coordinate system
orgy: origin y coordinate in page. in DIB coordinate system
Return type: @return:true or false&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>ink</name>
                <type>com.radaee.pdf.Ink</type>
            </parameter>
            <parameter>
                <name>orgx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>orgy</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ReflowStart</name>
            <comment>Start Reflow.&lt;br/&gt;
 this method valid in professional or premium version
width: input width, function calculate height.
scale: scale base to 72 DPI, 2.0 means 144 DPI. the reflowed text will displayed in scale
enable_images: enable reflow images.
Return type: @return:the height that reflow needed.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>scale</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>enable_images</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotEditbox</name>
            <comment>add an edit-box on page. the edit-box has no border and background.
 the font of edit box is set by Global.setTextFont in Global.Init().
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in premium version.
rect: 4 elements: left, top, right, bottom in PDF coordinate system.
tsize: text size in DIB coordinate system.
color: text color, formated as 0xAARRGGBB.
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>tsize</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ObjsAlignWord</name>
            <comment>get index aligned by word. this can be invoked after ObjsStart
from: 0 based unicode index.
dir: if dir &lt; 0,  get start index of the word. otherwise get last index of the word.
Return type: @return:new index value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>from</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dir</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CopyAnnot</name>
            <comment>clone an annotation object to this page.&lt;br/&gt;
 this method need a professional or premium license.
annot: Annotation object must be in this document..
rect: [left, top, right, bottom] in PDF coordinate.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>annot</name>
                <type>com.radaee.pdf.Page.Annotation</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>RenderThumb</name>
            <comment>render thumb image to Bitmap object.&lt;br/&gt;
 the image always scale and displayed in center of Bitmap.&lt;br/&gt;
bmp: Bitmap to render
Return type: @return:true if the page has thumb image, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bmp</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>AddAnnotPolygon</name>
            <comment>add polygon to page.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this can be invoked after ObjsStart or Render or RenderToBmp.&lt;br/&gt;
 this method valid in professional or premium version
path: must be a closed contour.
color: stroke color formated as 0xAARRGGBB.
fill_color: fill color, formated as 0xAARRGGBB. if AA == 0, no fill operations, otherwise alpha value is same to stroke color.
width: stroke width in PDF coordinate
Return type: @return:true or false.&lt;br/&gt;
 the added annotation can be obtained by Page.GetAnnot(Page.GetAnnotCount() - 1), if this method return true.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>fill_color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Page.ResFont</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.radaee.pdf.Page.ResGState</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.radaee.pdf.Page.ResImage</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.radaee.pdf.Page.Annotation</name>
        <owner>process</owner>
        <method>
            <name>GetPolylinePath</name>
            <comment>get Path object from Polyline annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetStrokeWidth</name>
            <comment>get stroke width of square/circle/ink/line/ploygon/polyline/free text annotation.&lt;br/&gt;
 for free text annotation: width of edit-box border&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:width value in PDF coordinate, or 0 if error.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>GetFieldFullName2</name>
            <comment>get full name of the annotation with more details.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or full name of the annotation, example: "Form1[0].EditBox1[0]".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetStrokeColor</name>
            <comment>set stroke color of square/circle/ink/line/underline/Squiggly/strikeout/ploygon/polyline/free text annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
color: color value formatted as 0xAARRGGBB, if alpha channel is too less or 0, return false.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetComboItem</name>
            <comment>get an item of combo-box.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index. range:[0, GetAnnotComboItemCount()-1]
Return type: @return:null if this is not combo-box, "" if no item selected, otherwise the item selected.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RenderToBmp</name>
            <comment>render an annotation to Bitmap. this method fully scale annotation to bitmap object.&lt;br/&gt;
 this method valid in professional or premium version.&lt;br/&gt;
 Notice 1: the render result may not correct for some annotation that not used Alpha Color blending.&lt;br/&gt;
 example: highlight annotation may not render correctly.&lt;br/&gt;
 Notice 2: you can invoke Global.hideAnnots() in Global.Init(), and invoke this method to handle Annotations by yourself.
bitmap: Bitmap object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>GetPopupSubject</name>
            <comment>get annotation's popup subject.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:subject string or null if failed.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetMovie</name>
            <comment>get annotation's movie name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the movie, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetPopupText</name>
            <comment>set annotation's popup text.&lt;br/&gt;
 this method valid in professional or premium version
val: text string
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetSoundData</name>
            <comment>get annotation's sound data.&lt;br/&gt;
 this method valid in professional or premium version
paras: paras[0] == 0, if formated audio file(*.mp3 ...).
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>paras</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetEditTextRect</name>
            <comment>get position and size of edit-box.&lt;br/&gt;
 for FreeText annotation, position of edit-box is not the position of annotation.&lt;br/&gt;
 so this function is needed for edit-box.
 this method valid in premium version
rect: 4 elements in order: left, top, right, bottom, in PDF coordinate.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>GetFillColor</name>
            <comment>get fill color of square/circle/highlight/line/ploygon/polyline/sticky text/free text annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:color value formatted as 0xAARRGGBB, if 0 returned, means false.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetPolygonPath</name>
            <comment>get Path object from Polygon annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetStrokeColor</name>
            <comment>get stroke color of square/circle/ink/line/underline/Squiggly/strikeout/ploygon/polyline/free text annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:color value formatted as 0xAARRGGBB, if 0 returned, means false.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetStrokeWidth</name>
            <comment>set stroke width of square/circle/ink/line/ploygon/polyline/free text annotation.&lt;br/&gt;
 for free text annotation: width of edit-box border&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
width: stroke width in PDF coordinate.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetPopupText</name>
            <comment>get annotation's popup text.&lt;br/&gt;
 this method valid in professional or premium version.
Return type: @return:text string or null if failed.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>IsLocked</name>
            <comment>check if position and size of the annotation is locked?&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true if locked, or not locked.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSound</name>
            <comment>get annotation's sound name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the audio, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Get3D</name>
            <comment>get annotation's 3D object name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the 3D object, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetRect</name>
            <comment>get annotation's box rectangle.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:4 elements: left, top, right, bottom in PDF coordinate system</comment>
            <returntype>float[]</returntype>
        </method>
        <method>
            <name>GetListItemCount</name>
            <comment>get item count of list-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1: this is not a list. otherwise: items count.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetListSels</name>
            <comment>get selected indexes of list-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not a list-box, or no items selected.</comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>GetSubmitPara</name>
            <comment>get annotation submit parameters.&lt;br/&gt;
 mail mode: return whole XML string for form data.&lt;br/&gt;
 other mode: url data likes: "para1=xxx&amp;para2=xxx".&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if this is not submit button.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetPopupSubject</name>
            <comment>set annotation's popup subject.&lt;br/&gt;
 this method valid in professional or premium version
val: subject string
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetInkPath</name>
            <comment>get Path object from Ink annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:a new Path object, you need invoke Path.Destroy() to free memory.</comment>
            <returntype>com.radaee.pdf.Path</returntype>
        </method>
        <method>
            <name>GetIcon</name>
            <comment>get icon value for sticky text note/file attachment/Rubber Stamp annotation.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:icon value depends on annotation type.&lt;br/&gt;
 &lt;strong&gt;For sticky text note:&lt;/strong&gt;&lt;br/&gt;
 0: Note&lt;br/&gt;
 1: Comment&lt;br/&gt;
 2: Key&lt;br/&gt;
 3: Help&lt;br/&gt;
 4: NewParagraph&lt;br/&gt;
 5: Paragraph&lt;br/&gt;
 6: Insert&lt;br/&gt;
 7: Check&lt;br/&gt;
 8: Circle&lt;br/&gt;
 9: Cross&lt;br/&gt;
 &lt;strong&gt;For file attachment:&lt;/strong&gt;&lt;br/&gt;
 0: PushPin&lt;br/&gt;
 1: Graph&lt;br/&gt;
 2: Paperclip&lt;br/&gt;
 3: Tag&lt;br/&gt;
 &lt;strong&gt;For Rubber Stamp:&lt;/strong&gt;&lt;br/&gt;
  0: "Draft"(default icon)&lt;br/&gt;
  1: "Approved"&lt;br/&gt;
  2: "Experimental"&lt;br/&gt;
  3: "NotApproved"&lt;br/&gt;
  4: "AsIs"&lt;br/&gt;
  5: "Expired"&lt;br/&gt;
  6: "NotForPublicRelease"&lt;br/&gt;
  7: "Confidential"&lt;br/&gt;
  8: "Final"&lt;br/&gt;
  9: "Sold"&lt;br/&gt;
 10: "Departmental"&lt;br/&gt;
 11: "ForComment"&lt;br/&gt;
 12: "TopSecret"&lt;br/&gt;
 13: "ForPublicRelease"&lt;br/&gt;
 14: "Accepted"&lt;br/&gt;
 15: "Rejected"&lt;br/&gt;
 16: "Witness"&lt;br/&gt;
 17: "InitialHere"&lt;br/&gt;
 18: "SignHere"&lt;br/&gt;
 19: "Void"&lt;br/&gt;
 20: "Completed"&lt;br/&gt;
 21: "PreliminaryResults"&lt;br/&gt;
 22: "InformationOnly"&lt;br/&gt;
 23: "End"&lt;br/&gt;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetRadio</name>
            <comment>check the radio-box and deselect others in radio group.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSubmitTarget</name>
            <comment>get annotation submit target.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if this is not submit button.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetFieldFullName</name>
            <comment>get name of the annotation.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or full name of the annotation, example: "Form1.EditBox1".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetEditMaxlen</name>
            <comment>get max-len of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:0 if no limit, great than 0 if has limit.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetPolygonPath</name>
            <comment>set Path to Polygon annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetType</name>
            <comment>get annotation type.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:type as these values:&lt;br/&gt;
 0:  unknown&lt;br/&gt;
 1:  text&lt;br/&gt;
 2:  link&lt;br/&gt;
 3:  free text&lt;br/&gt;
 4:  line&lt;br/&gt;
 5:  square&lt;br/&gt;
 6:  circle&lt;br/&gt;
 7:  polygon&lt;br/&gt;
 8:  polyline&lt;br/&gt;
 9:  text hilight&lt;br/&gt;
 10: text under line&lt;br/&gt;
 11: text squiggly&lt;br/&gt;
 12: text strikeout&lt;br/&gt;
 13: stamp&lt;br/&gt;
 14: caret&lt;br/&gt;
 15: ink&lt;br/&gt;
 16: popup&lt;br/&gt;
 17: file attachment&lt;br/&gt;
 18: sound&lt;br/&gt;
 19: movie&lt;br/&gt;
 20: widget&lt;br/&gt;
 21: screen&lt;br/&gt;
 22: print mark&lt;br/&gt;
 23: trap net&lt;br/&gt;
 24: water mark&lt;br/&gt;
 25: 3d object&lt;br/&gt;
 26: rich media</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetListSels</name>
            <comment>set selects of list-box
 this method valid in premium version
items: 0 based indexes of items.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>items</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>GetFieldType</name>
            <comment>get annotation field type in acroForm.&lt;br/&gt;
 this method valid in premium version
Return type: @return:type as these values:&lt;br/&gt;
 0: unknown&lt;br/&gt;
 1: button field&lt;br/&gt;
 2: text field&lt;br/&gt;
 3: choice field&lt;br/&gt;
 4: signature field&lt;br/&gt;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetComboItemSel</name>
            <comment>get current selected item index of combo-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1 if this is not combo-box or no item selected, otherwise the item index that selected.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetListItem</name>
            <comment>get an item of list-box.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index. range:[0, GetListItemCount()-1]
Return type: @return:null if this is not list-box, "" if no item selected, otherwise the item selected.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetIcon</name>
            <comment>set icon for sticky text note/file attachment/Rubber Stamp annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
icon: icon value depends on annotation type.&lt;br/&gt;
 &lt;strong&gt;For sticky text note:&lt;/strong&gt;&lt;br/&gt;
 0: Note&lt;br/&gt;
 1: Comment&lt;br/&gt;
 2: Key&lt;br/&gt;
 3: Help&lt;br/&gt;
 4: NewParagraph&lt;br/&gt;
 5: Paragraph&lt;br/&gt;
 6: Insert&lt;br/&gt;
 7: Check&lt;br/&gt;
 8: Circle&lt;br/&gt;
 9: Cross&lt;br/&gt;
 &lt;strong&gt;For file attachment:&lt;/strong&gt;&lt;br/&gt;
 0: PushPin&lt;br/&gt;
 1: Graph&lt;br/&gt;
 2: Paperclip&lt;br/&gt;
 3: Tag&lt;br/&gt;
 &lt;strong&gt;For Rubber Stamp:&lt;/strong&gt;&lt;br/&gt;
  0: "Draft"(default icon)&lt;br/&gt;
  1: "Approved"&lt;br/&gt;
  2: "Experimental"&lt;br/&gt;
  3: "NotApproved"&lt;br/&gt;
  4: "AsIs"&lt;br/&gt;
  5: "Expired"&lt;br/&gt;
  6: "NotForPublicRelease"&lt;br/&gt;
  7: "Confidential"&lt;br/&gt;
  8: "Final"&lt;br/&gt;
  9: "Sold"&lt;br/&gt;
 10: "Departmental"&lt;br/&gt;
 11: "ForComment"&lt;br/&gt;
 12: "TopSecret"&lt;br/&gt;
 13: "ForPublicRelease"&lt;br/&gt;
 14: "Accepted"&lt;br/&gt;
 15: "Rejected"&lt;br/&gt;
 16: "Witness"&lt;br/&gt;
 17: "InitialHere"&lt;br/&gt;
 18: "SignHere"&lt;br/&gt;
 19: "Void"&lt;br/&gt;
 20: "Completed"&lt;br/&gt;
 21: "PreliminaryResults"&lt;br/&gt;
 22: "InformationOnly"&lt;br/&gt;
 23: "End"&lt;br/&gt;
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>icon</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCheckStatus</name>
            <comment>get status of check-box and radio-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:&lt;br/&gt;-1 if annotation is not valid control.&lt;br/&gt;0 if check-box is not checked.&lt;br/&gt;1 if check-box checked.&lt;br/&gt;2 if radio-box is not checked.&lt;br/&gt;3 if radio-box checked.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditTextSize</name>
            <comment>get text size of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:size of text, in PDF coordinate system.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>RemoveFromPage</name>
            <comment>remove annotation&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetAttachmentData</name>
            <comment>get annotation's attachment data.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetFillColor</name>
            <comment>set fill color of square/circle/highlight/line/ploygon/polyline/sticky text/free text annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
color: color value formatted as 0xAARRGGBB, if alpha channel is too less or 0, return false.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetDest</name>
            <comment>get annotation's destination.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:0 based page NO, or -1 if failed.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetMovieData</name>
            <comment>get annotation's movie data.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get3DData</name>
            <comment>get annotation's 3D data. must be *.u3d format.&lt;br/&gt;
 this method valid in professional or premium version
save_file: full path name to save data.
Return type: @return:true if save_file created, or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>save_file</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetPolylinePath</name>
            <comment>set Path to Polyline annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetMarkupRects</name>
            <comment>get markup annotation's boxes.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:float array, container many boxes.&lt;br/&gt;
 each 4 elements defined a box, as [left, top, right, bottom] in PDF coordinate.&lt;br/&gt;
 length of this array must be 4 times.</comment>
            <returntype>float[]</returntype>
        </method>
        <method>
            <name>SetInkPath</name>
            <comment>set Path to Ink annotation.&lt;br/&gt;
 you need render page again to show modified annotation.&lt;br/&gt;
 this method valid in professional or premium version
path: Path object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>GetReset</name>
            <comment>check if the annotation is reset button?&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetEditText</name>
            <comment>set contents of edit-box.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
text: contents to be set.&lt;br/&gt;in MultiLine mode: '\r' or '\n' means change line.&lt;br/&gt;in password mode the edit box always display "*".
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsLockedContent</name>
            <comment>check if texts of the annotation is locked?&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:true if locked, or not locked.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetComboItem</name>
            <comment>set current selected.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
item: 0 based item index to set.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>item</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetCheckValue</name>
            <comment>set value to check-box.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
check: true or false.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>check</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetFieldName</name>
            <comment>get name of the annotation.&lt;br/&gt;
 this method valid in premium version
Return type: @return:null if it is not field, or name of the annotation, example: "EditBox1[0]".</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetRect</name>
            <comment>set annotation's box rectangle.&lt;br/&gt;
 this method valid in professional or premium version.&lt;br/&gt;
 you shall render page after this invoked, to resize or move annotation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MoveToPage</name>
            <comment>move annotation to another page.&lt;be/&gt;
 this method valid in professional or premium version.&lt;br/&gt;
 this method just like invoke Page.CopyAnnot() and Annotation.RemoveFromPage(), but, less data generated.&lt;br/&gt;
 Notice: ObjsStart or RenderXXX shall be invoked for dst_page.
dst_page: page to move.
rect: [left, top, right, bottom] in PDF coordinate in dst_page.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>dst_page</name>
                <type>com.radaee.pdf.Page</type>
            </parameter>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>GetIndexInPage</name>
            <comment>get this annotation index in page.
Return type: @return:0 based index value or -1;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>SetHide</name>
            <comment>set hide status for annotation.
 this method valid in professional or premium version.&lt;br/&gt;
 you shall render page after this invoked, to hide annotation.
hide: true or false.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hide</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetURI</name>
            <comment>get annotation's URL link string.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:string of URL, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>SetReset</name>
            <comment>perform the button and reset the form.&lt;br/&gt;
 you should re-render page to display modified data.&lt;br/&gt;
 this method valid in premium version
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetSignStatus</name>
            <comment>get status of signature field.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1 if this is not signature field&lt;br/&gt;
  0 if not signed.&lt;br/&gt;
  1 if signed.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditType</name>
            <comment>get type of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:&lt;br/&gt;-1: this annotation is not text-box.&lt;br/&gt; 1: normal single line.&lt;br/&gt;2: password.&lt;br/&gt;3: MultiLine edit area.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetEditText</name>
            <comment>get contents of edit-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:content in edit-box</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>GetComboItemCount</name>
            <comment>get item count of combo-box.&lt;br/&gt;
 this method valid in premium version
Return type: @return:-1: this is not combo. otherwise: items count.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsHide</name>
            <comment>check whether the annotation is hide.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetAttachment</name>
            <comment>get annotation's attachment name.&lt;br/&gt;
 this method valid in professional or premium version
Return type: @return:name of the attachment, or null</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <property>
            <name>Locked</name>
            <parameter>
                <name>lock</name>
                <type>boolean</type>
            </parameter>
            <comment>set annotation lock status.&lt;br/&gt;</comment>
        </property>
    </class>
    <class>
        <name>com.radaee.pdf.Page.Finder</name>
        <owner>process</owner>
        <method>
            <name>Close</name>
            <comment>free memory of find session.
hand_finder: handle of find session, obtained by FindOpen.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetFirstChar</name>
            <comment>get find count in this page.
hand_finder: handle of find session, obtained by FindOpen.
index: 0 based index value. range:[0, FindGetCount()-1]
Return type: @return:the first char index of texts, see: ObjsGetString. range:[0, ObjsGetCharCount()-1]</comment>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetCount</name>
            <comment>get find count in this page.
hand_finder: handle of find session, obtained by FindOpen.
Return type: @return:count or 0 if no found.</comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Matrix</name>
        <comment>class for PDF Matrix.</comment>
        <owner>process</owner>
        <method>
            <name>TransformPath</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>path</name>
                <type>com.radaee.pdf.Path</type>
            </parameter>
        </method>
        <method>
            <name>TransformRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>Invert</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TransformInk</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ink</name>
                <type>com.radaee.pdf.Ink</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TransformPoint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>point</name>
                <type>float[]</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Ink</name>
        <comment>class for ink.</comment>
        <owner>process</owner>
        <method>
            <name>OnDraw</name>
            <comment>draw to canvas
canvas: Canvas to draw</comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>OnMove</name>
            <comment>call when moving
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnDown</name>
            <comment>call when click down
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnUp</name>
            <comment>call when click up
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.HWriting</name>
        <comment>class for hand-writing ink.&lt;br/&gt;
not same to Ink class, this class has max line width and min line width.&lt;br/&gt;
so the line in HWriting will not in same width.</comment>
        <owner>process</owner>
        <method>
            <name>OnDraw</name>
            <comment>draw to locked bitmap handle.
bmp,: obtained by Global.lockBitmap()</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OnMove</name>
            <comment>call when moving
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnDown</name>
            <comment>call when click down
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OnUp</name>
            <comment>call when click up
x: x value of point in this object.
y: y value of point in this object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Destroy</name>
            <comment>destroy and free memory.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Global</name>
        <comment>class for Global setting.</comment>
        <owner>process</owner>
        <method>
            <name>invertBmp</name>
            <comment>invert all colors for locked bmp.
bmp: handle value, that returned by lockBitmap.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToPDFRect</name>
            <comment>map DIB rectangle to PDF rectangle.
mat: Matrix object defined scale, rotate, tranlate operations.
drect: input rect in DIB coordinate system. [left, top, right,
            bottom]
prect: output rect in PDF coordinate system. [left, top, right,
            bottom]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>drect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>prect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>RemoveTmp</name>
            <comment>remove all tmp files that "pdfex" library generated.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToDIBRect</name>
            <comment>map PDF rectangle to DIB rectangle.
mat: Matrix object defined scale, rotate, tranlate operations.
prect: input rect in PDF coordinate system. [left, top, right,
            bottom]
drect: output rect in DIB coordinate system. [left, top, right,
            bottom]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>prect</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>drect</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>drawBmpToDIB</name>
            <comment>draw Bitmap object to a dib
dib: 
bmp: handle value, that returned by lockBitmap.
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ToPDFPoint</name>
            <comment>map DIB point to PDF point.
mat: Matrix object defined scale, rotate, tranlate operations.
dpoint: input point in DIB coordinate system. [x, y]
ppoint: output point in PDF coordinate system. [x, y]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>dpoint</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>ppoint</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>default_config</name>
            <comment>reset to default configure.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>drawRect</name>
            <comment>fill solid rectangle to bmp.
bmp: handle value, that returned by lockBitmap.
color: the color to fill, formatted: 0xAARRGGBB, AA: alpha value.
x: 
y: 
width: 
height: 
mode: &lt;br/&gt;
            0: mix color by source pixels with alpha channel. &lt;br/&gt;
            1: replace pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dibFree</name>
            <comment>free dib object.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawToBmp</name>
            <comment>draw dib to bmp.
bmp: handle value, that returned by lockBitmap.
dib: 
x: origin position in bmp.
y: origin position in bmp.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawScroll</name>
            <comment>not used for developer</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>dib1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dib2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>style</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dibGet</name>
            <comment>create or resize dib, and reset all pixels in dib.&lt;br/&gt;
 if dib is 0, function create a new dib object.&lt;br/&gt;
 otherwise function resize the dib object.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>lockBitmap</name>
            <comment>lock Bitmap object, and get a handle.
bitmap: Bitmap object.
Return type: @return:hand handle value.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>ToDIBPoint</name>
            <comment>map PDF point to DIB point.
mat: Matrix object defined scale, rotate, tranlate operations.
ppoint: input point in PDF coordinate system. [x, y]
dpoint: output point in DIB coordinate system. [x, y]</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mat</name>
                <type>com.radaee.pdf.Matrix</type>
            </parameter>
            <parameter>
                <name>ppoint</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>dpoint</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>unlockBitmap</name>
            <comment>unlock Bitmap object, and free the handle.
bitmap: Bitmap object that passed to lockBitmap.
bmp: handle value, that returned by lockBitmap.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawRectToDIB</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawToDIB</name>
            <comment>draw a dib to another dib
dst_dib: 
src_dib: 
x: 
y: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>dst_dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>src_dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>drawToBmp2</name>
            <comment>draw dib to bmp, with scale
bmp: 
dib: 
x: 
y: 
w: 
h: </comment>
            <returntype>void</returntype>
            <parameter>
                <name>bmp</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dib</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Init</name>
            <comment>global initialize function. it load JNI library and write some data to
 memory.
act: Activity object, must be called super.onCreate().</comment>
            <returntype>void</returntype>
            <parameter>
                <name>act</name>
                <type>android.app.Activity</type>
            </parameter>
        </method>
        <field>
            <name>recentFiles</name>
            <comment>not used for developer</comment>
            <returntype>com.radaee.pdfex.PDFRecent</returntype>
        </field>
        <field>
            <name>need_time_span</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>rectColor</name>
            <comment>color for rect annotation.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>selRTOL</name>
            <comment>is text selection start from right to left in one line?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>fling_speed</name>
            <comment>fling speed: 0.1-0.4</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>tmp_path</name>
            <comment>temp path, able after Init() invoked</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>zoomStep</name>
            <comment></comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>dark_mode</name>
            <comment>render as dark mode?</comment>
            <returntype>boolean</returntype>
        </field>
        <field>
            <name>def_view</name>
            <comment>default view:&lt;br/&gt;
 0:vertical&lt;br/&gt;
 2:scroll&lt;br/&gt;
 3:single&lt;br/&gt;
 4:SingleEx&lt;br/&gt;
 5:ReFlow&lt;br/&gt;
 6:2 page in landscape</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>inkWidth</name>
            <comment>width for ink lines.</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>selColor</name>
            <comment>selection color.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>zoomLevel</name>
            <comment>max zoom level; valid values: [2, 5]</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>inkColor</name>
            <comment>color for ink annotation</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>fling_dis</name>
            <comment>fling distance: 0.5-2</comment>
            <returntype>float</returntype>
        </field>
        <field>
            <name>render_mode</name>
            <comment>render mode: 0:draft 1:normal 2:best</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.radaee.pdf.Document</name>
        <comment>class for PDF Document.</comment>
        <owner>process</owner>
        <method>
            <name>GetOutlines</name>
            <comment>get first root outline item.
Return type: @return:handle value of first root outline item. or null if no outlines.&lt;br/&gt;</comment>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
        </method>
        <method>
            <name>Open</name>
            <comment>open document.&lt;br/&gt;
 first time, SDK try password as user password, and then try password as owner password.
path: PDF file to be open.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
 0:succeeded, and continue&lt;br/&gt;
 -1:need input password&lt;br/&gt;
 -2:unknown encryption&lt;br/&gt;
 -3:damaged or invalid format&lt;br/&gt;
 -10:access denied or invalid file path&lt;br/&gt;
 others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewImage</name>
            <comment>create an image from Bitmap object.&lt;br/&gt;
 a premium license is needed for this method.
bmp: Bitmap object in ARGB_8888 format.
has_alpha: generate alpha channel information?
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>bmp</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>has_alpha</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetPerm</name>
            <comment>get permission of PDF, this value defined in "Perm" entry in Catalog object
Return type: @return:0 means not defined&lt;br/&gt;
 1 means can't modify&lt;br/&gt;
 2 means can modify some form fields&lt;br/&gt;
 3 means can do any modify&lt;br/&gt;</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetPermission</name>
            <comment>get permission of PDF, this value defined in PDF reference 1.7&lt;br/&gt;
 bit 1-2 reserved&lt;br/&gt;
 bit 3(0x4) print&lt;br/&gt;
 bit 4(0x8) modify&lt;br/&gt;
 bit 5(0x10) extract text or image&lt;br/&gt;
 others: see PDF reference
Return type: @return:permission flags</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetPageHeight</name>
            <comment>get page height by page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:height value.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CreateForStream</name>
            <comment>create a empty PDF document
stream: stream to create
Return type: @return:0 or less than 0 means failed, same as Open.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.Document.PDFStream</type>
            </parameter>
        </method>
        <method>
            <name>RemovePage</name>
            <comment>remove page by page NO.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetPageWidth</name>
            <comment>get page width by page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:width value.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>is_opened</name>
            <comment>check if opened.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>close the document.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NewRootOutline</name>
            <comment>new a root outline to document, it insert first root outline to Document.&lt;br/&gt;
 the old first root outline, shall be next of this outline.
label: label to display
pageno: pageno to jump
top: y position in PDF coordinate
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>NewPage</name>
            <comment>insert a page to Document&lt;br/&gt;
 if pagheno &gt;= page_count, it do same as append.&lt;br/&gt;
 otherwise, insert to pageno.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
w: page width in PDF coordinate
h: page height in PDF coordinate
Return type: @return:Page object or null means failed.</comment>
            <returntype>com.radaee.pdf.Page</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>w</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Create</name>
            <comment>create a empty PDF document
path: path to create
Return type: @return:0 or less than 0 means failed, same as Open.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>OpenStream</name>
            <comment>open document from stream.
 first time, SDK try password as user password, and then try password as owner password.
stream: PDFStream object.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
 0:succeeded, and continue&lt;br/&gt;
 -1:need input password&lt;br/&gt;
 -2:unknown encryption&lt;br/&gt;
 -3:damaged or invalid format&lt;br/&gt;
 -10:access denied or invalid file path&lt;br/&gt;
 others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>stream</name>
                <type>com.radaee.pdf.Document.PDFStream</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ImportStart</name>
            <comment>Start import operations, import page from src&lt;br/&gt;
 a premium license is needed for this method.&lt;br/&gt;
 you shall maintenance the source Document object until all pages are imported and ImportContext.Destroy() invoked.
src: source Document object that opened.
Return type: @return:a context object used in ImportPage.</comment>
            <returntype>com.radaee.pdf.Document.ImportContext</returntype>
            <parameter>
                <name>src</name>
                <type>com.radaee.pdf.Document</type>
            </parameter>
        </method>
        <method>
            <name>SetPageRotate</name>
            <comment>set page rotate.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
degree: rotate angle in degree, must be 90 * n.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>degree</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetPage</name>
            <comment>get a Page object for page NO.
pageno: 0 based page NO. range:[0, GetPageCount()-1]
Return type: @return:Page object</comment>
            <returntype>com.radaee.pdf.Page</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OpenMem</name>
            <comment>open document in memory.
 first time, SDK try password as user password, and then try password as owner password.
data: data for whole PDF file in byte array. developers should retain array data, till document closed.
password: password or null.
Return type: @return:error code:&lt;br/&gt;
 0:succeeded, and continue&lt;br/&gt;
 -1:need input password&lt;br/&gt;
 -2:unknown encryption&lt;br/&gt;
 -3:damaged or invalid format&lt;br/&gt;
 -10:access denied or invalid file path&lt;br/&gt;
 others:unknown error</comment>
            <returntype>int</returntype>
            <parameter>
                <name>data</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ChangePageRect</name>
            <comment>change page rect.&lt;br/&gt;
 a premium license is needed for this method.
pageno: 0 based page NO.
dl: delta to left, page_left += dl;
dt: delta to top, page_top += dt;
dr: delta to right, page_right += dr;
db: delta to bottom, page_bottom += db;
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dl</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dt</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dr</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>db</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>NewImageJPEG</name>
            <comment>create an image from JPEG/JPG file.&lt;br/&gt;
 supported image color space:&lt;br/&gt;
 --GRAY&lt;br/&gt;
 --RGB&lt;br/&gt;
 --CMYK&lt;br/&gt;
 a premium license is needed for this method.
path: path to JPEG file.
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>NewFontCID</name>
            <comment>create a font object, used to write texts.&lt;br/&gt;
 a premium license is needed for this method.
font_name: &lt;br/&gt;
 font name exists in font list.&lt;br/&gt;
 using Global.getFaceCount(), Global.getFaceName() to enumerate fonts.
style: &lt;br/&gt;
   (style&amp;1) means bold,&lt;br/&gt;
   (style&amp;2) means Italic,&lt;br/&gt;
   (style&amp;8) means embed,&lt;br/&gt;
   (style&amp;16) means vertical writing, mostly used in Asia fonts.
Return type: @return:DocFont object or null is failed.</comment>
            <returntype>com.radaee.pdf.Document.DocFont</returntype>
            <parameter>
                <name>font_name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>style</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NewImageJPX</name>
            <comment>create an image from JPX/JPEG 2k file.&lt;br/&gt;
 a premium license is needed for this method.
path: path to JPX file.
Return type: @return:DocImage object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocImage</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetCache</name>
            <comment>set cache file to PDF.&lt;br/&gt;
 a premium license is needed for this method.
path: a path to save some temporary data, compressed images and so on
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MovePage</name>
            <comment>move the page to other position.&lt;br/&gt;
 a premium license is needed for this method.
pageno1: page NO, move from
pageno2: page NO, move to
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>pageno1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pageno2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetPageCount</name>
            <comment>get pages count.
Return type: @return:pages count.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>IsEncrypted</name>
            <comment>check if document is encrypted.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>NewGState</name>
            <comment>create a ExtGraphicState object, used to set alpha values.&lt;br/&gt;
 a premium license is needed for this method.
Return type: @return:DocGState object or null.</comment>
            <returntype>com.radaee.pdf.Document.DocGState</returntype>
        </method>
        <method>
            <name>SaveAs</name>
            <comment>save as the document to another file. it remove any security information.&lt;br/&gt;
 this always return false, if no license actived.
path: path to save.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetMeta</name>
            <comment>get meta data for document.
tag: Predefined values:"Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", "ModDate".&lt;br/&gt;or you can pass any key that self-defined.
Return type: @return:Meta string value, or null.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CanSave</name>
            <comment>check if document can be modified or saved.&lt;br/&gt;
 this always return false, if no license actived.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetMeta</name>
            <comment>set meta data for document.&lt;br/&gt;
 this method valid only in premium version.
tag: Predefined values:"Title", "Author", "Subject", "Keywords", "Creator", "Producer", "CreationDate", "ModDate".&lt;br/&gt;or you can pass any key that self-defined.
val: string value.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>val</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Save</name>
            <comment>save the document.&lt;br/&gt;
 this always return false, if no license actived.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ImportPage</name>
            <comment>import a page to the document.&lt;br/&gt;
 a premium license is needed for this method.&lt;br/&gt;
 do not forget to invoke ImportContext.Destroy() after all pages are imported.
ctx: context object created from ImportStart
srcno: 0 based page NO. from source Document that passed to ImportStart.
dstno: 0 based page NO. to insert in this document object.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ctx</name>
                <type>com.radaee.pdf.Document.ImportContext</type>
            </parameter>
            <parameter>
                <name>srcno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstno</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Vals</name>
            <returntype>int[]</returntype>
            <comment>inner function.</comment>
        </property>
    </class>
    <class>
        <name>com.radaee.pdf.Document.ImportContext</name>
        <owner>process</owner>
        <method>
            <name>Destroy</name>
            <comment>Destroy context object and free memory used.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Document.Outline</name>
        <owner>process</owner>
        <method>
            <name>GetChild</name>
            <comment>get first child
Return type: @return:</comment>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
        </method>
        <method>
            <name>GetNext</name>
            <comment>get next
Return type: @return:</comment>
            <returntype>com.radaee.pdf.Document.Outline</returntype>
        </method>
        <method>
            <name>AddChild</name>
            <comment>insert outline as first child of this Outline.&lt;br/&gt;
 a premium license is needed for this method.
label: label of new outline.
pageno: 0 based page NO.
top: y in PDF coordinate.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetTitle</name>
            <comment>set label of Outline.&lt;br/&gt;
 a premium license is needed for this method.
title: title to set
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>title</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RemoveFromDoc</name>
            <comment>remove this Outline, and all children of this Outline.&lt;br/&gt;
 this method connect previous Outline and next Outline.&lt;br/&gt;
 a premium license is needed for this method.
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>AddNext</name>
            <comment>insert outline after of this Outline.&lt;br/&gt;
 a premium license is needed for this method.
label: label of new outline.
pageno: 0 based page NO.
top: y in PDF coordinate.
Return type: @return:true of false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetDest</name>
            <comment>get jumping page NO.
Return type: @return:0 based page NO.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>GetTitle</name>
            <comment>get label of Outline
Return type: @return:</comment>
            <returntype>java.lang.String</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Document.DocFont</name>
        <owner>process</owner>
        <method>
            <name>GetAscent</name>
            <comment>get ascent
Return type: @return:ascent based in 1, for example: 0.88f</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>GetDescent</name>
            <comment>get descent
Return type: @return:ascent based in 1, for example: -0.12f</comment>
            <returntype>float</returntype>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Document.DocGState</name>
        <owner>process</owner>
        <method>
            <name>SetStrokeAlpha</name>
            <comment>set alpha value for stroke operation
alpha: range: [0, 255]
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetFillAlpha</name>
            <comment>set alpha value for fill and other non-stroke operation
alpha: range: [0, 255]
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.radaee.pdf.Document.DocImage</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.radaee.pdf.BMDatabase</name>
        <comment>class for PDF Book-mark database.</comment>
        <owner>process</owner>
        <method>
            <name>RecItemGetPage</name>
            <comment>Get page no by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:0 based page NO.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OpenOrCreate</name>
            <comment>open exist database file or create it if not exist. (Database for BookMark)
db_path: 
Return type: @return:</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>db_path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment>close database</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RecItemRemove</name>
            <comment>remove item by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:true or false.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecGetCount</name>
            <comment>Get items count of RecordSet.
rec: RecordSet Handle, obtained by RecOpen
Return type: @return:records count</comment>
            <returntype>int</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecItemInsert</name>
            <comment>insert item.
rec: RecordSet Handle that returned by RecOpen
name: label of BookMark.
pageno: 0 based page no recorded.
Return type: @return:true or false</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>pageno</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecClose</name>
            <comment>Close a RecordSet handle
rec: handle value of RecordSet. obtained by RecOpen</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RecOpen</name>
            <comment>Get a RecordSet handle, by input PDF file path
look_path: PDF path to lookup.
Return type: @return:handle value of RecordSet.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>look_path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RecItemGetName</name>
            <comment>Get item name by index.
rec: RecordSet Handle that returned by RecOpen
index: 0 based index value, range:[0, RecGetCount()-1]
Return type: @return:name of item.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>rec</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <version>1.0</version>
    <author>RootSoft</author>
    <dependsOn>pdfviewer_native</dependsOn>
</root>
